{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jean\\\\Scolarite\\\\NUS\\\\SoC\\\\Data_vizualisation\\\\Assignement_2\\\\assignement2-app\\\\src\\\\Components\\\\TreeMap.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport data from \"../assets/treeMap.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TreeMap() {\n  //{ selectedGroups }) {\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading viz...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GraphVisualization, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this); //data={data} selectedGroups={selectedGroups} />;\n}\n_c = TreeMap;\nconst GraphVisualization = () => {\n  _s();\n  const svgRef = useRef(null);\n  const width = 1154;\n  const height = 1154;\n  useEffect(() => {\n    if (!data) return;\n    d3.select(\"#treemap-container\").select(\"svg\").remove();\n    const color = d3.scaleOrdinal(data.children.map(d => d.name), d3.schemeTableau10);\n    const root = d3.treemap().tile(d3.treemapSquarify).size([width, height]).padding(1).round(true)(d3.hierarchy(data).sum(d => d.value).sort((a, b) => b.value - a.value));\n    const svg = d3.select(\"#treemap-container\").append(\"svg\").attr(\"viewBox\", `0 0 ${width} ${height}`).style(\"font\", \"10px sans-serif\");\n    const z = svg.append(\"g\");\n    const zoom = d3.zoom().scaleExtent([0.5, 5]).on(\"zoom\", event => {\n      z.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    const leaf = z.selectAll(\"g\").data(root.leaves()).join(\"g\").attr(\"transform\", d => `translate(${d.x0},${d.y0})`);\n    const format = d3.format(\",d\");\n    leaf.append(\"title\").text(d => `${d.ancestors().reverse().map(d => d.data.name).join(\".\")}\\n${format(d.value)}`);\n    leaf.append(\"rect\").attr(\"fill\", d => {\n      while (d.depth > 1) d = d.parent;\n      return color(d.data.name);\n    }).attr(\"fill-opacity\", 1).attr(\"width\", d => d.x1 - d.x0).attr(\"height\", d => d.y1 - d.y0);\n    leaf.append(\"text\").selectAll(\"tspan\").data(d => d.data.name.split(/(?=[A-Z][a-z])|\\s+/g).concat(format(d.value))).join(\"tspan\").attr(\"x\", 3).attr(\"y\", (d, i, nodes) => `${(i === nodes.length - 1) * 0.3 + 1.1 + i * 0.9}em`).attr(\"fill-opacity\", (d, i, nodes) => i === nodes.length - 1 ? 0.7 : null).style(\"font-size\", (d, i, nodes) => i === nodes.length - 1 ? \"2.5em\" : \"2em\").style(\"font-weight\", (d, i, nodes) => i === nodes.length - 1 ? \"bold\" : \"normal\").classed(\"value-text\", (d, i, nodes) => i === nodes.length - 1).text(d => d).style(\"font-size\", (d, i, nodes) => i === nodes.length - 1 ? \"2.5em\" : \"2em\").style(\"font-weight\", (d, i, nodes) => i === nodes.length - 1 ? \"bold\" : \"normal\");\n    //.style(\"fill\", (d, i, nodes) => (i === nodes.length - 1 ? \"#ff5733\" : \"#000\"));\n\n    console.log(\"root\", root);\n    console.log(\"root.children\", root.children.name); //.name);\n    console.log(\"root.leaves()\", root.leaves());\n    const categories = Array.from(new Set(root.children.map(d => d.name)));\n    const legendData = categories.map(category => ({\n      name: category,\n      color: color(category)\n    }));\n    console.log(\"categories\", categories);\n    console.log(\"legendData\", legendData);\n    const legend = svg.append(\"g\").attr(\"transform\", `translate(${width - 150}, ${10})`);\n    const legendItem = legend.selectAll(\".legend-item\").data(legendData).join(\"g\").append(\"g\").attr(\"class\", \"legend-item\").attr(\"transform\", (d, i) => `translate(0, ${i * 25})`);\n    legendItem.append(\"rect\").attr(\"width\", 15).attr(\"height\", 15).attr(\"fill\", d => d.color);\n    legendItem.append(\"text\").attr(\"x\", 20).attr(\"y\", 12).text(d => d.name).style(\"font-size\", \"14px\").style(\"fill\", \"#000\").attr(\"alignment-baseline\", \"middle\");\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"treemap-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 12\n  }, this);\n};\n_s(GraphVisualization, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c2 = GraphVisualization;\nexport default TreeMap;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeMap\");\n$RefreshReg$(_c2, \"GraphVisualization\");","map":{"version":3,"names":["useEffect","useState","useRef","d3","data","jsxDEV","_jsxDEV","TreeMap","children","fileName","_jsxFileName","lineNumber","columnNumber","GraphVisualization","_c","_s","svgRef","width","height","select","remove","color","scaleOrdinal","map","d","name","schemeTableau10","root","treemap","tile","treemapSquarify","size","padding","round","hierarchy","sum","value","sort","a","b","svg","append","attr","style","z","zoom","scaleExtent","on","event","transform","call","leaf","selectAll","leaves","join","x0","y0","format","text","ancestors","reverse","depth","parent","x1","y1","split","concat","i","nodes","length","classed","console","log","categories","Array","from","Set","legendData","category","legend","legendItem","id","_c2","$RefreshReg$"],"sources":["C:/Jean/Scolarite/NUS/SoC/Data_vizualisation/Assignement_2/assignement2-app/src/Components/TreeMap.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport data from \"../assets/treeMap.json\";\r\n\r\n\r\nfunction TreeMap(){//{ selectedGroups }) {\r\n    if (!data) return <p>Loading viz...</p>;\r\n  \r\n    return <GraphVisualization/>; //data={data} selectedGroups={selectedGroups} />;\r\n  }\r\n\r\nconst GraphVisualization = () => {\r\n    const svgRef = useRef(null);\r\n    const width = 1154;\r\n    const height = 1154;\r\n\r\n    useEffect(() => {\r\n        if (!data) return;\r\n        d3.select(\"#treemap-container\").select(\"svg\").remove();\r\n\r\n        const color = d3.scaleOrdinal(data.children.map((d) => d.name), d3.schemeTableau10);\r\n\r\n        const root = d3.treemap()\r\n        .tile(d3.treemapSquarify)\r\n        .size([width, height])\r\n        .padding(1)\r\n        .round(true)(\r\n            d3.hierarchy(data)\r\n            .sum((d) => d.value)\r\n            .sort((a, b) => b.value - a.value)\r\n        );\r\n\r\n        const svg = d3.select(\"#treemap-container\")\r\n        .append(\"svg\")\r\n        .attr(\"viewBox\", `0 0 ${width} ${height}`)\r\n        .style(\"font\", \"10px sans-serif\");\r\n\r\n\r\n        const z = svg.append(\"g\");\r\n\r\n        const zoom = d3.zoom()\r\n            .scaleExtent([0.5, 5]) \r\n            .on(\"zoom\", (event) => {\r\n            z.attr(\"transform\", event.transform); \r\n            });\r\n    \r\n        svg.call(zoom);\r\n\r\n        const leaf = z.selectAll(\"g\")\r\n        .data(root.leaves())\r\n        .join(\"g\")\r\n        .attr(\"transform\", (d) => `translate(${d.x0},${d.y0})`);\r\n\r\n        const format = d3.format(\",d\");\r\n        leaf.append(\"title\").text((d) =>\r\n        `${d.ancestors().reverse().map((d) => d.data.name).join(\".\")}\\n${format(d.value)}`\r\n        );\r\n        leaf.append(\"rect\")\r\n        .attr(\"fill\", (d) => {\r\n            while (d.depth > 1) d = d.parent;\r\n            return color(d.data.name);\r\n        })\r\n        .attr(\"fill-opacity\", 1)\r\n        .attr(\"width\", (d) => d.x1 - d.x0)\r\n        .attr(\"height\", (d) => d.y1 - d.y0);\r\n        \r\n        leaf.append(\"text\")\r\n        .selectAll(\"tspan\")\r\n        .data((d) => d.data.name.split(/(?=[A-Z][a-z])|\\s+/g).concat(format(d.value)))\r\n        .join(\"tspan\")\r\n        .attr(\"x\", 3)\r\n        .attr(\"y\", (d, i, nodes) => `${(i === nodes.length - 1) * 0.3 + 1.1 + i * 0.9}em`)\r\n        .attr(\"fill-opacity\", (d, i, nodes) => (i === nodes.length - 1 ? 0.7 : null))\r\n        .style(\"font-size\", (d, i, nodes) => (i === nodes.length - 1 ? \"2.5em\" : \"2em\"))\r\n        .style(\"font-weight\", (d, i, nodes) => (i === nodes.length - 1 ? \"bold\" : \"normal\"))\r\n        .classed(\"value-text\", (d, i, nodes) => i === nodes.length - 1) \r\n        .text((d) => d)\r\n        .style(\"font-size\", (d, i, nodes) => (i === nodes.length - 1 ? \"2.5em\" : \"2em\")) \r\n        .style(\"font-weight\", (d, i, nodes) => (i === nodes.length - 1 ? \"bold\" : \"normal\"));\r\n        //.style(\"fill\", (d, i, nodes) => (i === nodes.length - 1 ? \"#ff5733\" : \"#000\"));\r\n\r\n        console.log(\"root\", root);\r\n        console.log(\"root.children\", root.children.name);//.name);\r\n        console.log(\"root.leaves()\", root.leaves());\r\n        const categories = Array.from(new Set(root.children.map(d => d.name)));\r\n        const legendData = categories.map(category => ({ \r\n            name: category, \r\n            color: color(category) \r\n        }));\r\n\r\n        console.log(\"categories\", categories);\r\n        console.log(\"legendData\", legendData);\r\n\r\n        const legend = svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${width - 150}, ${10})`); \r\n            const legendItem = legend.selectAll(\".legend-item\")\r\n                                    .data(legendData)\r\n                                    .join(\"g\")\r\n                                    .append(\"g\")\r\n                                    .attr(\"class\", \"legend-item\")\r\n                                    .attr(\"transform\", (d, i) => `translate(0, ${i * 25})`);\r\n\r\n            legendItem.append(\"rect\")\r\n                .attr(\"width\", 15)\r\n                .attr(\"height\", 15)\r\n                .attr(\"fill\", d => d.color);\r\n\r\n            legendItem.append(\"text\")\r\n                .attr(\"x\", 20)\r\n                .attr(\"y\", 12)\r\n                .text(d => d.name)\r\n                .style(\"font-size\", \"14px\")\r\n                .style(\"fill\", \"#000\")\r\n                .attr(\"alignment-baseline\", \"middle\");\r\n    }, [data]);\r\n\r\n    return <div id=\"treemap-container\"></div>;\r\n    };\r\n\r\nexport default TreeMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}