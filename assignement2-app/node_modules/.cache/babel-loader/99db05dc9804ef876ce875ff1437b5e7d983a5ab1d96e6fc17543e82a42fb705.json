{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jean\\\\Scolarite\\\\NUS\\\\SoC\\\\Data_vizualisation\\\\Assignement_2\\\\assignement2-app\\\\src\\\\Components\\\\Hairball.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport data from \"../assets/test4.json\";\nimport \"./Hairball.css\";\nimport Slider from \"./Slider\";\nimport DateSlider from \"./DateSlider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Hairball({\n  selectedGroups\n}) {\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading viz...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GraphVisualization, {\n    data: data,\n    selectedGroups: selectedGroups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n_c = Hairball;\nfunction GraphVisualization({\n  data,\n  selectedGroups\n}) {\n  _s();\n  const [nbIntraLink, setNbIntraLink] = useState(0.02); // Valeur initiale du slider\n  const [nbInterLink, setNbInterLink] = useState(0.2); // Valeur initiale du slider\n  const [dateRange, setDateRange] = useState([\"2024-06-30\", \"2025-04-14\"]);\n\n  //const [visibleNodes, setVisibleNodes] = useState([]);\n  //const [visibleLinks, setVisibleLinks] = useState([]);\n\n  useEffect(() => {\n    const width = 928 * 2;\n    const height = 680 * 2;\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n    d3.select(\"#graph-container\").select(\"svg\").remove();\n    const svg = d3.select(\"#graph-container\").append(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [-width / 2, -height / 2, width, height]).style(\"max-width\", \"100%\").style(\"height\", \"auto\").style(\"border\", \"1px solid #333533\").style(\"border-radius\", \"8px\");\n    const zoom = d3.zoom().scaleExtent([0.5, 5]) // Zoom entre 50% et 500%\n    .on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    const g = svg.append(\"g\"); // Conteneur pour les éléments zoomables\n\n    const links = data.links.map(d => ({\n      ...d\n    }));\n    const nodes = data.nodes.map(d => ({\n      ...d\n    }));\n    let filteredNodes = nodes.filter(node => node.genres.some(genre => selectedGroups.has(genre)));\n\n    /*\r\n    let filteredLinks = links.filter(link =>\r\n      link.source_group.some(group => selectedGroups.has(group)) &&\r\n      link.target_group.some(group => selectedGroups.has(group))\r\n    );\r\n    */\n    let filteredLinks = links;\n    filteredLinks = filteredLinks.filter(link => {\n      const differentCluster = link.source_group[0] !== link.target_group[0];\n      return differentCluster || Math.random() < nbIntraLink; // Garde 20% des liens inter-cluster\n    });\n    filteredLinks = filteredLinks.filter(link => {\n      const differentCluster = link.source_group[0] == link.target_group[0];\n      return differentCluster || Math.random() < nbInterLink; // Garde 20% des liens inter-cluster\n    });\n    const startDate = new Date(\"1997-06-30\"); // Date minimale\n    const endDate = new Date(\"1997-06-30\"); // Date maximale\n\n    filteredNodes = filteredNodes.filter(node => {\n      const nodeDate = new Date(node.release_date);\n      return nodeDate >= new Date(dateRange[0]) && nodeDate <= new Date(dateRange[1]);\n    });\n    const nodeIds = new Set(filteredNodes.map(node => node.id));\n    filteredLinks = links.filter(link => nodeIds.has(link.source) && nodeIds.has(link.target));\n    const simulation = d3.forceSimulation(filteredNodes).force(\"link\", d3.forceLink(filteredLinks).id(d => d.id)).force(\"charge\", d3.forceManyBody()).force(\"x\", d3.forceX()).force(\"y\", d3.forceY());\n\n    // Fonction d'ajout progressif des nœuds\n    /*\r\n    let index = 0;\r\n    const addNodesGradually = () => {\r\n      if (index < filteredNodes.length) {\r\n        setVisibleNodes(prevNodes => {\r\n          const newNodes = [...prevNodes, filteredNodes[index]];\r\n          \r\n          // Met à jour les liens en ajoutant ceux qui deviennent valides\r\n          const newLinks = links.filter(link =>\r\n            newNodes.find(n => n.id === link.source) &&\r\n            newNodes.find(n => n.id === link.target)\r\n          );\r\n            setVisibleLinks(newLinks);\r\n          return newNodes;\r\n        });\r\n        index++;\r\n        setTimeout(addNodesGradually, 200); // Ajoute un nouveau nœud toutes les 200ms\r\n      }\r\n    };\r\n    */\n\n    //addNodesGradually();\n\n    const link = g.append(\"g\").attr(\"stroke\", \"#999\").attr(\"stroke-opacity\", 0.6).selectAll(\"line\").data(filteredLinks).join(\"line\");\n    /*\r\n    .style(\"opacity\", 0)\r\n    .attr(\"stroke-width\", d => Math.sqrt(d.value))\r\n    .transition().duration(500)\r\n    .style(\"opacity\", 1);\r\n    */\n    const node = g.append(\"g\")\n    //.attr(\"stroke\", \"#fff\")\n    .attr(\"stroke-width\", 1.5).selectAll(\"circle\").data(filteredNodes).join(\"circle\").attr(\"r\", 5).attr(\"fill\", d => color(d.genres[0]))\n\n    //.style(\"opacity\", 0)\n    //.transition().duration(500)\n    //.style(\"opacity\", 1)\n    .call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended));\n    const legend = svg.append(\"g\").attr(\"transform\", `translate(${width / 2 - 100}, ${height / 2 - 600})`);\n    const uniqueGroups = Array.from(new Set(filteredNodes.flatMap(node => node.genres[0])));\n    uniqueGroups.forEach((group, i) => {\n      const legendRow = legend.append(\"g\").attr(\"transform\", `translate(${-150}, ${i * 70 - 600})`);\n      legendRow.append(\"rect\").attr(\"width\", 30).attr(\"height\", 30).attr(\"fill\", color(group));\n      legendRow.append(\"text\").attr(\"x\", -20).attr(\"y\", -10).attr(\"text-anchor\", \"start\").attr(\"font-size\", \"24px\").attr(\"fill\", \"#E8EDDF\").text(group);\n    });\n    const groupCenters = new Map();\n\n    // Définition des positions centrales des groupes\n    uniqueGroups.forEach((group, i) => {\n      groupCenters.set(group, {\n        x: i % 3 * 200 - width / 4,\n        y: Math.floor(i / 3) * 200 - height / 4\n      });\n    });\n\n    // Ajout d'une force qui attire chaque groupe vers son centre\n    simulation.force(\"grouping\", d3.forceManyBody().strength(-15)) // Répulsion entre tous les noeuds\n    .force(\"groupCenter\", d3.forceX().x(d => {\n      const group = d.genres[0]; // Prend le premier groupe pour l'attraction\n      return groupCenters.has(group) ? groupCenters.get(group).x : 0;\n    }).strength(0.1)).force(\"groupY\", d3.forceY().y(d => {\n      const group = d.genres[0];\n      return groupCenters.has(group) ? groupCenters.get(group).y : 0;\n    }).strength(0.1));\n\n    //node.append(\"title\").text(d => d.id);\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"position\", \"absolute\").style(\"background\", \"#333\").style(\"color\", \"white\").style(\"padding\", \"5px 10px\").style(\"border-radius\", \"5px\").style(\"display\", \"none\").style(\"pointer-events\", \"none\");\n    node.on(\"mouseover\", function (event, d) {\n      d3.select(this); //.transition().duration(200).attr(\"r\", d.radius * 1.5); // Augmente la taille du nœud\n      tooltip.style(\"display\", \"block\").style(\"left\", `${event.pageX + 10}px`).style(\"top\", `${event.pageY - 10}px`).text(d.id);\n    });\n    node.on(\"mouseout\", function () {\n      d3.select(this).transition().duration(200).attr(\"r\", 5); //d => d.radius); \n      tooltip.style(\"display\", \"none\");\n    });\n    simulation.on(\"tick\", () => {\n      link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n      node.attr(\"cx\", d => d.x).attr(\"r\", 5) //d => d.radius)\n      .attr(\"cy\", d => d.y);\n    });\n    function dragstarted(event) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n    function dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n    function dragended(event) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n    return () => simulation.stop(); // Nettoyage du simulation\n  }, [data, selectedGroups, nbInterLink, nbIntraLink, dateRange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"graph-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(Slider, {\n        nbLink: nbIntraLink,\n        setNbLink: setNbIntraLink,\n        className: \"slider-intra\",\n        htmlFor: \"intra_link\",\n        label: \"intra link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        nbLink: nbInterLink,\n        setNbLink: setNbInterLink,\n        className: \"slider-inter\",\n        htmlFor: \"inter_link\",\n        label: \"inter link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DateSlider, {\n        minDate: \"1997-06-30\",\n        maxDate: \"2025-04-14\",\n        dateRange: dateRange,\n        setDateRange: setDateRange,\n        className: \"date-slider\",\n        label: \"Date Range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 3\n  }, this);\n}\n_s(GraphVisualization, \"r+M52KNqvs9n4AZPBEV0VTxCZiQ=\");\n_c2 = GraphVisualization;\nexport default Hairball;\nvar _c, _c2;\n$RefreshReg$(_c, \"Hairball\");\n$RefreshReg$(_c2, \"GraphVisualization\");","map":{"version":3,"names":["React","useEffect","useState","d3","data","Slider","DateSlider","jsxDEV","_jsxDEV","Hairball","selectedGroups","children","fileName","_jsxFileName","lineNumber","columnNumber","GraphVisualization","_c","_s","nbIntraLink","setNbIntraLink","nbInterLink","setNbInterLink","dateRange","setDateRange","width","height","color","scaleOrdinal","schemeCategory10","select","remove","svg","append","attr","style","zoom","scaleExtent","on","event","g","transform","call","links","map","d","nodes","filteredNodes","filter","node","genres","some","genre","has","filteredLinks","link","differentCluster","source_group","target_group","Math","random","startDate","Date","endDate","nodeDate","release_date","nodeIds","Set","id","source","target","simulation","forceSimulation","force","forceLink","forceManyBody","forceX","forceY","selectAll","join","drag","dragstarted","dragged","dragended","legend","uniqueGroups","Array","from","flatMap","forEach","group","i","legendRow","text","groupCenters","Map","set","x","y","floor","strength","get","tooltip","pageX","pageY","transition","duration","active","alphaTarget","restart","subject","fx","fy","stop","className","nbLink","setNbLink","htmlFor","label","minDate","maxDate","_c2","$RefreshReg$"],"sources":["C:/Jean/Scolarite/NUS/SoC/Data_vizualisation/Assignement_2/assignement2-app/src/Components/Hairball.jsx"],"sourcesContent":["import React, { useEffect, useState} from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport data from \"../assets/test4.json\";\r\nimport \"./Hairball.css\";\r\nimport Slider from \"./Slider\";\r\nimport DateSlider from \"./DateSlider\";\r\n\r\nfunction Hairball({selectedGroups}) {\r\n  if (!data) return <p>Loading viz...</p>;\r\n\r\n  return <GraphVisualization data={data} selectedGroups={selectedGroups}/>;\r\n}\r\n\r\nfunction GraphVisualization({ data, selectedGroups }) {\r\n  const [nbIntraLink, setNbIntraLink] = useState(0.02); // Valeur initiale du slider\r\n  const [nbInterLink, setNbInterLink] = useState(0.2); // Valeur initiale du slider\r\n  const [dateRange, setDateRange] = useState([\"2024-06-30\", \"2025-04-14\"]);\r\n\r\n  //const [visibleNodes, setVisibleNodes] = useState([]);\r\n  //const [visibleLinks, setVisibleLinks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const width = 928 * 2;\r\n    const height = 680 * 2;\r\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n    d3.select(\"#graph-container\").select(\"svg\").remove();\r\n\r\n    const svg = d3.select(\"#graph-container\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height)\r\n      .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\r\n      .style(\"max-width\", \"100%\")\r\n      .style(\"height\", \"auto\")\r\n      .style(\"border\", \"1px solid #333533\")\r\n      .style(\"border-radius\", \"8px\");\r\n\r\n      const zoom = d3.zoom()\r\n      .scaleExtent([0.5, 5]) // Zoom entre 50% et 500%\r\n      .on(\"zoom\", (event) => {\r\n        g.attr(\"transform\", event.transform);\r\n      });\r\n\r\n    svg.call(zoom);\r\n\r\n    const g = svg.append(\"g\"); // Conteneur pour les éléments zoomables\r\n\r\n    const links = data.links.map(d => ({ ...d }));\r\n    const nodes = data.nodes.map(d => ({ ...d }));\r\n    \r\n    let filteredNodes = nodes.filter(node =>\r\n      node.genres.some(genre => selectedGroups.has(genre))\r\n    );\r\n\r\n    /*\r\n    let filteredLinks = links.filter(link =>\r\n      link.source_group.some(group => selectedGroups.has(group)) &&\r\n      link.target_group.some(group => selectedGroups.has(group))\r\n    );\r\n    */\r\n    let filteredLinks = links;\r\n\r\n    filteredLinks = filteredLinks.filter(link => {\r\n        const differentCluster = link.source_group[0] !== link.target_group[0];\r\n        return differentCluster || Math.random() < nbIntraLink; // Garde 20% des liens inter-cluster\r\n    });\r\n\r\n    filteredLinks = filteredLinks.filter(link => {\r\n        const differentCluster = link.source_group[0] == link.target_group[0];\r\n        return differentCluster || Math.random() < nbInterLink; // Garde 20% des liens inter-cluster\r\n    });\r\n    \r\n    const startDate = new Date(\"1997-06-30\"); // Date minimale\r\n    const endDate = new Date(\"1997-06-30\");   // Date maximale\r\n    \r\n    filteredNodes = filteredNodes.filter(node => {\r\n        const nodeDate = new Date(node.release_date);\r\n        return nodeDate >= new Date(dateRange[0]) && nodeDate <= new Date(dateRange[1]);\r\n    });\r\n    \r\n    const nodeIds = new Set(filteredNodes.map(node => node.id));\r\n\r\n    filteredLinks = links.filter(link => \r\n        nodeIds.has(link.source) && nodeIds.has(link.target)\r\n    );\r\n\r\n    const simulation = d3.forceSimulation(filteredNodes)\r\n      .force(\"link\", d3.forceLink(filteredLinks).id(d => d.id))\r\n      .force(\"charge\", d3.forceManyBody())\r\n      .force(\"x\", d3.forceX())\r\n      .force(\"y\", d3.forceY())\r\n\r\n\r\n    // Fonction d'ajout progressif des nœuds\r\n    /*\r\n    let index = 0;\r\n    const addNodesGradually = () => {\r\n      if (index < filteredNodes.length) {\r\n        setVisibleNodes(prevNodes => {\r\n          const newNodes = [...prevNodes, filteredNodes[index]];\r\n          \r\n          // Met à jour les liens en ajoutant ceux qui deviennent valides\r\n          const newLinks = links.filter(link =>\r\n            newNodes.find(n => n.id === link.source) &&\r\n            newNodes.find(n => n.id === link.target)\r\n          );\r\n\r\n          setVisibleLinks(newLinks);\r\n          return newNodes;\r\n        });\r\n        index++;\r\n        setTimeout(addNodesGradually, 200); // Ajoute un nouveau nœud toutes les 200ms\r\n      }\r\n    };\r\n    */\r\n\r\n    //addNodesGradually();\r\n\r\n      \r\n\r\n    const link = g.append(\"g\")\r\n      .attr(\"stroke\", \"#999\")\r\n      .attr(\"stroke-opacity\", 0.6)\r\n      .selectAll(\"line\")\r\n      .data(filteredLinks)\r\n      .join(\"line\");\r\n      /*\r\n      .style(\"opacity\", 0)\r\n      .attr(\"stroke-width\", d => Math.sqrt(d.value))\r\n      .transition().duration(500)\r\n      .style(\"opacity\", 1);\r\n      */\r\n    const node = g.append(\"g\")\r\n      //.attr(\"stroke\", \"#fff\")\r\n      .attr(\"stroke-width\", 1.5)\r\n      .selectAll(\"circle\")\r\n      .data(filteredNodes)\r\n      .join(\"circle\")\r\n      .attr(\"r\", 5)\r\n      .attr(\"fill\", d => color(d.genres[0]))\r\n      \r\n      //.style(\"opacity\", 0)\r\n      //.transition().duration(500)\r\n      //.style(\"opacity\", 1)\r\n      .call(d3.drag()\r\n        .on(\"start\", dragstarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragended));\r\n\r\n      const legend = svg.append(\"g\")\r\n      .attr(\"transform\", `translate(${width / 2 - 100}, ${height / 2 - 600})`);\r\n      \r\n      const uniqueGroups = Array.from(new Set(filteredNodes.flatMap(node => node.genres[0])));\r\n      uniqueGroups.forEach((group, i) => {\r\n        const legendRow = legend.append(\"g\")\r\n          .attr(\"transform\", `translate(${-150}, ${i*70 - 600})`);\r\n      \r\n        legendRow.append(\"rect\")\r\n          .attr(\"width\", 30)\r\n          .attr(\"height\", 30)\r\n          .attr(\"fill\", color(group));\r\n      \r\n        legendRow.append(\"text\")\r\n          .attr(\"x\", -20)\r\n          .attr(\"y\", -10)\r\n          .attr(\"text-anchor\", \"start\")\r\n          .attr(\"font-size\", \"24px\")\r\n          .attr(\"fill\", \"#E8EDDF\")\r\n          .text(group);\r\n      });\r\n\r\n    const groupCenters = new Map();\r\n\r\n    // Définition des positions centrales des groupes\r\n    uniqueGroups.forEach((group, i) => {\r\n      groupCenters.set(group, { x: (i % 3) * 200 - width / 4, y: Math.floor(i / 3) * 200 - height / 4 });\r\n    });\r\n\r\n    // Ajout d'une force qui attire chaque groupe vers son centre\r\n    simulation.force(\"grouping\", d3.forceManyBody().strength(-15)) // Répulsion entre tous les noeuds\r\n  .force(\"groupCenter\", d3.forceX().x(d => {\r\n    const group = d.genres[0]; // Prend le premier groupe pour l'attraction\r\n    return groupCenters.has(group) ? groupCenters.get(group).x : 0;\r\n  }).strength(0.1))\r\n  .force(\"groupY\", d3.forceY().y(d => {\r\n    const group = d.genres[0];\r\n    return groupCenters.has(group) ? groupCenters.get(group).y : 0;\r\n  }).strength(0.1));\r\n      \r\n        \r\n    //node.append(\"title\").text(d => d.id);\r\n    const tooltip = d3.select(\"body\").append(\"div\")\r\n    .attr(\"class\", \"tooltip\")\r\n    .style(\"position\", \"absolute\")\r\n    .style(\"background\", \"#333\")\r\n    .style(\"color\", \"white\")\r\n    .style(\"padding\", \"5px 10px\")\r\n    .style(\"border-radius\", \"5px\")\r\n    .style(\"display\", \"none\")\r\n    .style(\"pointer-events\", \"none\");\r\n\r\n    \r\n    node.on(\"mouseover\", function (event, d) {\r\n        d3.select(this);//.transition().duration(200).attr(\"r\", d.radius * 1.5); // Augmente la taille du nœud\r\n        tooltip.style(\"display\", \"block\")\r\n            .style(\"left\", `${event.pageX + 10}px`)\r\n            .style(\"top\", `${event.pageY - 10}px`)\r\n            .text(d.id);\r\n    });\r\n    \r\n    node.on(\"mouseout\", function () {\r\n        d3.select(this)\r\n        .transition()\r\n        .duration(200)\r\n        .attr(\"r\", 5);//d => d.radius); \r\n        tooltip.style(\"display\", \"none\");\r\n    });\r\n      \r\n\r\n    simulation.on(\"tick\", () => {\r\n      link\r\n        .attr(\"x1\", d => d.source.x)\r\n        .attr(\"y1\", d => d.source.y)\r\n        .attr(\"x2\", d => d.target.x)\r\n        .attr(\"y2\", d => d.target.y);\r\n\r\n      node\r\n        .attr(\"cx\", d => d.x)\r\n        .attr(\"r\", 5)//d => d.radius)\r\n        .attr(\"cy\", d => d.y);\r\n    });\r\n\r\n    function dragstarted(event) {\r\n      if (!event.active) simulation.alphaTarget(0.3).restart();\r\n      event.subject.fx = event.subject.x;\r\n      event.subject.fy = event.subject.y;\r\n    }\r\n\r\n    function dragged(event) {\r\n      event.subject.fx = event.x;\r\n      event.subject.fy = event.y;\r\n    }\r\n\r\n    function dragended(event) {\r\n      if (!event.active) simulation.alphaTarget(0);\r\n      event.subject.fx = null;\r\n      event.subject.fy = null;\r\n    }\r\n\r\n\r\n    return () => simulation.stop(); // Nettoyage du simulation\r\n  }, [data, selectedGroups, nbInterLink, nbIntraLink, dateRange]);\r\n\r\n  return (\r\n  <div id=\"graph-container\">\r\n    <div className=\"slider-container\">\r\n        <Slider nbLink={nbIntraLink} setNbLink={setNbIntraLink} className=\"slider-intra\"  htmlFor=\"intra_link\" label=\"intra link\"/>\r\n        <Slider nbLink={nbInterLink} setNbLink={setNbInterLink} className=\"slider-inter\"  htmlFor=\"inter_link\" label=\"inter link\"/>\r\n        <DateSlider minDate=\"1997-06-30\" maxDate=\"2025-04-14\" dateRange={dateRange} setDateRange={setDateRange} className=\"date-slider\" label=\"Date Range\"/>\r\n    </div>\r\n  </div>)\r\n  \r\n  ; \r\n}\r\n\r\nexport default Hairball;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACjD,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAO,gBAAgB;AACvB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,QAAQA,CAAC;EAACC;AAAc,CAAC,EAAE;EAClC,IAAI,CAACN,IAAI,EAAE,oBAAOI,OAAA;IAAAG,QAAA,EAAG;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEvC,oBAAOP,OAAA,CAACQ,kBAAkB;IAACZ,IAAI,EAAEA,IAAK;IAACM,cAAc,EAAEA;EAAe;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC1E;AAACE,EAAA,GAJQR,QAAQ;AAMjB,SAASO,kBAAkBA,CAAC;EAAEZ,IAAI;EAAEM;AAAe,CAAC,EAAE;EAAAQ,EAAA;EACpD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACrD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;;EAExE;EACA;;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMwB,KAAK,GAAG,GAAG,GAAG,CAAC;IACrB,MAAMC,MAAM,GAAG,GAAG,GAAG,CAAC;IACtB,MAAMC,KAAK,GAAGxB,EAAE,CAACyB,YAAY,CAACzB,EAAE,CAAC0B,gBAAgB,CAAC;IAElD1B,EAAE,CAAC2B,MAAM,CAAC,kBAAkB,CAAC,CAACA,MAAM,CAAC,KAAK,CAAC,CAACC,MAAM,CAAC,CAAC;IAEpD,MAAMC,GAAG,GAAG7B,EAAE,CAAC2B,MAAM,CAAC,kBAAkB,CAAC,CACtCG,MAAM,CAAC,KAAK,CAAC,CACbC,IAAI,CAAC,OAAO,EAAET,KAAK,CAAC,CACpBS,IAAI,CAAC,QAAQ,EAAER,MAAM,CAAC,CACtBQ,IAAI,CAAC,SAAS,EAAE,CAAC,CAACT,KAAK,GAAG,CAAC,EAAE,CAACC,MAAM,GAAG,CAAC,EAAED,KAAK,EAAEC,MAAM,CAAC,CAAC,CACzDS,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAC1BA,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CACvBA,KAAK,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CACpCA,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC;IAE9B,MAAMC,IAAI,GAAGjC,EAAE,CAACiC,IAAI,CAAC,CAAC,CACrBC,WAAW,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAAA,CACtBC,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;MACrBC,CAAC,CAACN,IAAI,CAAC,WAAW,EAAEK,KAAK,CAACE,SAAS,CAAC;IACtC,CAAC,CAAC;IAEJT,GAAG,CAACU,IAAI,CAACN,IAAI,CAAC;IAEd,MAAMI,CAAC,GAAGR,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;;IAE3B,MAAMU,KAAK,GAAGvC,IAAI,CAACuC,KAAK,CAACC,GAAG,CAACC,CAAC,KAAK;MAAE,GAAGA;IAAE,CAAC,CAAC,CAAC;IAC7C,MAAMC,KAAK,GAAG1C,IAAI,CAAC0C,KAAK,CAACF,GAAG,CAACC,CAAC,KAAK;MAAE,GAAGA;IAAE,CAAC,CAAC,CAAC;IAE7C,IAAIE,aAAa,GAAGD,KAAK,CAACE,MAAM,CAACC,IAAI,IACnCA,IAAI,CAACC,MAAM,CAACC,IAAI,CAACC,KAAK,IAAI1C,cAAc,CAAC2C,GAAG,CAACD,KAAK,CAAC,CACrD,CAAC;;IAED;AACJ;AACA;AACA;AACA;AACA;IACI,IAAIE,aAAa,GAAGX,KAAK;IAEzBW,aAAa,GAAGA,aAAa,CAACN,MAAM,CAACO,IAAI,IAAI;MACzC,MAAMC,gBAAgB,GAAGD,IAAI,CAACE,YAAY,CAAC,CAAC,CAAC,KAAKF,IAAI,CAACG,YAAY,CAAC,CAAC,CAAC;MACtE,OAAOF,gBAAgB,IAAIG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGzC,WAAW,CAAC,CAAC;IAC5D,CAAC,CAAC;IAEFmC,aAAa,GAAGA,aAAa,CAACN,MAAM,CAACO,IAAI,IAAI;MACzC,MAAMC,gBAAgB,GAAGD,IAAI,CAACE,YAAY,CAAC,CAAC,CAAC,IAAIF,IAAI,CAACG,YAAY,CAAC,CAAC,CAAC;MACrE,OAAOF,gBAAgB,IAAIG,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGvC,WAAW,CAAC,CAAC;IAC5D,CAAC,CAAC;IAEF,MAAMwC,SAAS,GAAG,IAAIC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC1C,MAAMC,OAAO,GAAG,IAAID,IAAI,CAAC,YAAY,CAAC,CAAC,CAAG;;IAE1Cf,aAAa,GAAGA,aAAa,CAACC,MAAM,CAACC,IAAI,IAAI;MACzC,MAAMe,QAAQ,GAAG,IAAIF,IAAI,CAACb,IAAI,CAACgB,YAAY,CAAC;MAC5C,OAAOD,QAAQ,IAAI,IAAIF,IAAI,CAACvC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAIyC,QAAQ,IAAI,IAAIF,IAAI,CAACvC,SAAS,CAAC,CAAC,CAAC,CAAC;IACnF,CAAC,CAAC;IAEF,MAAM2C,OAAO,GAAG,IAAIC,GAAG,CAACpB,aAAa,CAACH,GAAG,CAACK,IAAI,IAAIA,IAAI,CAACmB,EAAE,CAAC,CAAC;IAE3Dd,aAAa,GAAGX,KAAK,CAACK,MAAM,CAACO,IAAI,IAC7BW,OAAO,CAACb,GAAG,CAACE,IAAI,CAACc,MAAM,CAAC,IAAIH,OAAO,CAACb,GAAG,CAACE,IAAI,CAACe,MAAM,CACvD,CAAC;IAED,MAAMC,UAAU,GAAGpE,EAAE,CAACqE,eAAe,CAACzB,aAAa,CAAC,CACjD0B,KAAK,CAAC,MAAM,EAAEtE,EAAE,CAACuE,SAAS,CAACpB,aAAa,CAAC,CAACc,EAAE,CAACvB,CAAC,IAAIA,CAAC,CAACuB,EAAE,CAAC,CAAC,CACxDK,KAAK,CAAC,QAAQ,EAAEtE,EAAE,CAACwE,aAAa,CAAC,CAAC,CAAC,CACnCF,KAAK,CAAC,GAAG,EAAEtE,EAAE,CAACyE,MAAM,CAAC,CAAC,CAAC,CACvBH,KAAK,CAAC,GAAG,EAAEtE,EAAE,CAAC0E,MAAM,CAAC,CAAC,CAAC;;IAG1B;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGI;;IAIA,MAAMtB,IAAI,GAAGf,CAAC,CAACP,MAAM,CAAC,GAAG,CAAC,CACvBC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CACtBA,IAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAC3B4C,SAAS,CAAC,MAAM,CAAC,CACjB1E,IAAI,CAACkD,aAAa,CAAC,CACnByB,IAAI,CAAC,MAAM,CAAC;IACb;AACN;AACA;AACA;AACA;AACA;IACI,MAAM9B,IAAI,GAAGT,CAAC,CAACP,MAAM,CAAC,GAAG;IACvB;IAAA,CACCC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CACzB4C,SAAS,CAAC,QAAQ,CAAC,CACnB1E,IAAI,CAAC2C,aAAa,CAAC,CACnBgC,IAAI,CAAC,QAAQ,CAAC,CACd7C,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CACZA,IAAI,CAAC,MAAM,EAAEW,CAAC,IAAIlB,KAAK,CAACkB,CAAC,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC;;IAErC;IACA;IACA;IAAA,CACCR,IAAI,CAACvC,EAAE,CAAC6E,IAAI,CAAC,CAAC,CACZ1C,EAAE,CAAC,OAAO,EAAE2C,WAAW,CAAC,CACxB3C,EAAE,CAAC,MAAM,EAAE4C,OAAO,CAAC,CACnB5C,EAAE,CAAC,KAAK,EAAE6C,SAAS,CAAC,CAAC;IAExB,MAAMC,MAAM,GAAGpD,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAC7BC,IAAI,CAAC,WAAW,EAAE,aAAaT,KAAK,GAAG,CAAC,GAAG,GAAG,KAAKC,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;IAExE,MAAM2D,YAAY,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIpB,GAAG,CAACpB,aAAa,CAACyC,OAAO,CAACvC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvFmC,YAAY,CAACI,OAAO,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;MACjC,MAAMC,SAAS,GAAGR,MAAM,CAACnD,MAAM,CAAC,GAAG,CAAC,CACjCC,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,GAAG,KAAKyD,CAAC,GAAC,EAAE,GAAG,GAAG,GAAG,CAAC;MAEzDC,SAAS,CAAC3D,MAAM,CAAC,MAAM,CAAC,CACrBC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CACjBA,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAClBA,IAAI,CAAC,MAAM,EAAEP,KAAK,CAAC+D,KAAK,CAAC,CAAC;MAE7BE,SAAS,CAAC3D,MAAM,CAAC,MAAM,CAAC,CACrBC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CACdA,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CACdA,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,CAC5BA,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CACvB2D,IAAI,CAACH,KAAK,CAAC;IAChB,CAAC,CAAC;IAEJ,MAAMI,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;;IAE9B;IACAV,YAAY,CAACI,OAAO,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;MACjCG,YAAY,CAACE,GAAG,CAACN,KAAK,EAAE;QAAEO,CAAC,EAAGN,CAAC,GAAG,CAAC,GAAI,GAAG,GAAGlE,KAAK,GAAG,CAAC;QAAEyE,CAAC,EAAEvC,IAAI,CAACwC,KAAK,CAACR,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGjE,MAAM,GAAG;MAAE,CAAC,CAAC;IACpG,CAAC,CAAC;;IAEF;IACA6C,UAAU,CAACE,KAAK,CAAC,UAAU,EAAEtE,EAAE,CAACwE,aAAa,CAAC,CAAC,CAACyB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAAA,CAChE3B,KAAK,CAAC,aAAa,EAAEtE,EAAE,CAACyE,MAAM,CAAC,CAAC,CAACqB,CAAC,CAACpD,CAAC,IAAI;MACvC,MAAM6C,KAAK,GAAG7C,CAAC,CAACK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3B,OAAO4C,YAAY,CAACzC,GAAG,CAACqC,KAAK,CAAC,GAAGI,YAAY,CAACO,GAAG,CAACX,KAAK,CAAC,CAACO,CAAC,GAAG,CAAC;IAChE,CAAC,CAAC,CAACG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAChB3B,KAAK,CAAC,QAAQ,EAAEtE,EAAE,CAAC0E,MAAM,CAAC,CAAC,CAACqB,CAAC,CAACrD,CAAC,IAAI;MAClC,MAAM6C,KAAK,GAAG7C,CAAC,CAACK,MAAM,CAAC,CAAC,CAAC;MACzB,OAAO4C,YAAY,CAACzC,GAAG,CAACqC,KAAK,CAAC,GAAGI,YAAY,CAACO,GAAG,CAACX,KAAK,CAAC,CAACQ,CAAC,GAAG,CAAC;IAChE,CAAC,CAAC,CAACE,QAAQ,CAAC,GAAG,CAAC,CAAC;;IAGf;IACA,MAAME,OAAO,GAAGnG,EAAE,CAAC2B,MAAM,CAAC,MAAM,CAAC,CAACG,MAAM,CAAC,KAAK,CAAC,CAC9CC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CACxBC,KAAK,CAAC,UAAU,EAAE,UAAU,CAAC,CAC7BA,KAAK,CAAC,YAAY,EAAE,MAAM,CAAC,CAC3BA,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CACvBA,KAAK,CAAC,SAAS,EAAE,UAAU,CAAC,CAC5BA,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,CAC7BA,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC,CACxBA,KAAK,CAAC,gBAAgB,EAAE,MAAM,CAAC;IAGhCc,IAAI,CAACX,EAAE,CAAC,WAAW,EAAE,UAAUC,KAAK,EAAEM,CAAC,EAAE;MACrC1C,EAAE,CAAC2B,MAAM,CAAC,IAAI,CAAC,CAAC;MAChBwE,OAAO,CAACnE,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,CAC5BA,KAAK,CAAC,MAAM,EAAE,GAAGI,KAAK,CAACgE,KAAK,GAAG,EAAE,IAAI,CAAC,CACtCpE,KAAK,CAAC,KAAK,EAAE,GAAGI,KAAK,CAACiE,KAAK,GAAG,EAAE,IAAI,CAAC,CACrCX,IAAI,CAAChD,CAAC,CAACuB,EAAE,CAAC;IACnB,CAAC,CAAC;IAEFnB,IAAI,CAACX,EAAE,CAAC,UAAU,EAAE,YAAY;MAC5BnC,EAAE,CAAC2B,MAAM,CAAC,IAAI,CAAC,CACd2E,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,GAAG,CAAC,CACbxE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;MACdoE,OAAO,CAACnE,KAAK,CAAC,SAAS,EAAE,MAAM,CAAC;IACpC,CAAC,CAAC;IAGFoC,UAAU,CAACjC,EAAE,CAAC,MAAM,EAAE,MAAM;MAC1BiB,IAAI,CACDrB,IAAI,CAAC,IAAI,EAAEW,CAAC,IAAIA,CAAC,CAACwB,MAAM,CAAC4B,CAAC,CAAC,CAC3B/D,IAAI,CAAC,IAAI,EAAEW,CAAC,IAAIA,CAAC,CAACwB,MAAM,CAAC6B,CAAC,CAAC,CAC3BhE,IAAI,CAAC,IAAI,EAAEW,CAAC,IAAIA,CAAC,CAACyB,MAAM,CAAC2B,CAAC,CAAC,CAC3B/D,IAAI,CAAC,IAAI,EAAEW,CAAC,IAAIA,CAAC,CAACyB,MAAM,CAAC4B,CAAC,CAAC;MAE9BjD,IAAI,CACDf,IAAI,CAAC,IAAI,EAAEW,CAAC,IAAIA,CAAC,CAACoD,CAAC,CAAC,CACpB/D,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;MAAA,CACZA,IAAI,CAAC,IAAI,EAAEW,CAAC,IAAIA,CAAC,CAACqD,CAAC,CAAC;IACzB,CAAC,CAAC;IAEF,SAASjB,WAAWA,CAAC1C,KAAK,EAAE;MAC1B,IAAI,CAACA,KAAK,CAACoE,MAAM,EAAEpC,UAAU,CAACqC,WAAW,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,CAAC;MACxDtE,KAAK,CAACuE,OAAO,CAACC,EAAE,GAAGxE,KAAK,CAACuE,OAAO,CAACb,CAAC;MAClC1D,KAAK,CAACuE,OAAO,CAACE,EAAE,GAAGzE,KAAK,CAACuE,OAAO,CAACZ,CAAC;IACpC;IAEA,SAAShB,OAAOA,CAAC3C,KAAK,EAAE;MACtBA,KAAK,CAACuE,OAAO,CAACC,EAAE,GAAGxE,KAAK,CAAC0D,CAAC;MAC1B1D,KAAK,CAACuE,OAAO,CAACE,EAAE,GAAGzE,KAAK,CAAC2D,CAAC;IAC5B;IAEA,SAASf,SAASA,CAAC5C,KAAK,EAAE;MACxB,IAAI,CAACA,KAAK,CAACoE,MAAM,EAAEpC,UAAU,CAACqC,WAAW,CAAC,CAAC,CAAC;MAC5CrE,KAAK,CAACuE,OAAO,CAACC,EAAE,GAAG,IAAI;MACvBxE,KAAK,CAACuE,OAAO,CAACE,EAAE,GAAG,IAAI;IACzB;IAGA,OAAO,MAAMzC,UAAU,CAAC0C,IAAI,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC,EAAE,CAAC7G,IAAI,EAAEM,cAAc,EAAEW,WAAW,EAAEF,WAAW,EAAEI,SAAS,CAAC,CAAC;EAE/D,oBACAf,OAAA;IAAK4D,EAAE,EAAC,iBAAiB;IAAAzD,QAAA,eACvBH,OAAA;MAAK0G,SAAS,EAAC,kBAAkB;MAAAvG,QAAA,gBAC7BH,OAAA,CAACH,MAAM;QAAC8G,MAAM,EAAEhG,WAAY;QAACiG,SAAS,EAAEhG,cAAe;QAAC8F,SAAS,EAAC,cAAc;QAAEG,OAAO,EAAC,YAAY;QAACC,KAAK,EAAC;MAAY;QAAA1G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3HP,OAAA,CAACH,MAAM;QAAC8G,MAAM,EAAE9F,WAAY;QAAC+F,SAAS,EAAE9F,cAAe;QAAC4F,SAAS,EAAC,cAAc;QAAEG,OAAO,EAAC,YAAY;QAACC,KAAK,EAAC;MAAY;QAAA1G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3HP,OAAA,CAACF,UAAU;QAACiH,OAAO,EAAC,YAAY;QAACC,OAAO,EAAC,YAAY;QAACjG,SAAS,EAAEA,SAAU;QAACC,YAAY,EAAEA,YAAa;QAAC0F,SAAS,EAAC,aAAa;QAACI,KAAK,EAAC;MAAY;QAAA1G,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGR;AAACG,EAAA,CA3PQF,kBAAkB;AAAAyG,GAAA,GAAlBzG,kBAAkB;AA6P3B,eAAeP,QAAQ;AAAC,IAAAQ,EAAA,EAAAwG,GAAA;AAAAC,YAAA,CAAAzG,EAAA;AAAAyG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}