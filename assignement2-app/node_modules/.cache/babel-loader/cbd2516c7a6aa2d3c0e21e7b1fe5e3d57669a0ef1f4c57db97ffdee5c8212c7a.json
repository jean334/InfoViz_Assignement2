{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jean\\\\Scolarite\\\\NUS\\\\SoC\\\\Data_vizualisation\\\\Assignement_2\\\\assignement2-app\\\\src\\\\Components\\\\Hive.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport data from \"../assets/Hive.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 928 * 2;\nconst height = 680 * 2;\nconst color = d3.scaleOrdinal(d3.schemeCategory10);\nfunction Hive({\n  selectedGroups\n}) {\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Chargement du graphe...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 23\n  }, this);\n  // Simulation D3 et rendu\n  return /*#__PURE__*/_jsxDEV(HiveVisualization, {\n    data: data,\n    selectedGroups: selectedGroups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n}\n_c = Hive;\nfunction HiveVisualization({\n  data,\n  selectedGroups\n}) {\n  _s();\n  useEffect(() => {\n    if (!data || !data.nodes || !data.links) return;\n    d3.select(\"#hive-container\").select(\"svg\").remove();\n    const links = data.links.map(d => ({\n      ...d\n    }));\n    const nodes = data.nodes.map(d => ({\n      ...d\n    }));\n\n    //const filteredNodes = nodes.filter(node =>\n    //    node.group.some(group => selectedGroups.has(group))\n    //);\n\n    const filteredNodes = nodes.filter(node => selectedGroups.has(node.group));\n    //const filteredLinks = links.filter(link =>\n    //link.source_group.some(group => selectedGroups.has(group)) &&\n    //link.target_group.some(group => selectedGroups.has(group))\n    //);\n\n    const filteredLinks = links.filter(link => filteredNodes.some(node => node.id === link.source) && filteredNodes.some(node => node.id === link.target));\n    const t = d3.transition().duration(750).ease(d3.easeLinear);\n    const svg = d3.select(\"#hive-container\").append(\"svg\").attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [-width / 2, -height / 2, width, height]).style(\"max-width\", \"100%\").style(\"height\", \"auto\").style(\"border\", \"1px solid #333533\").style(\"border-radius\", \"8px\");\n    const g = svg.append(\"g\");\n\n    // Crée une zone de zoom\n    const zoom = d3.zoom().scaleExtent([0.5, 5]) // Facteur de zoom min/max\n    .on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform); // Applique la transformation sur le groupe contenant le graph\n    });\n    svg.call(zoom); // Active le zoom sur le SVG\n\n    const numGroups = selectedGroups.size;\n    const angleStep = 2 * Math.PI / numGroups; // Angle en radians\n    const radius = Math.min(width, height) / 2 - 50;\n\n    // Positions des axes\n    const groups = Array.from({\n      length: numGroups\n    }, (_, i) => ({\n      angle: i * angleStep,\n      x: radius * Math.cos(i * angleStep),\n      y: radius * Math.sin(i * angleStep)\n    }));\n\n    // Regroupement des nœuds par F\n    const nodesByGroup = d3.group(filteredNodes, d => d.group);\n\n    // Échelle pour positionner les nœuds le long des axes\n    const maxNodes = Math.max(...Array.from(nodesByGroup.values(), g => g.length));\n    const xScale = d3.scaleLinear().domain([0, maxNodes]).range([0, radius]);\n    const uniqueGroups = [...new Set(filteredNodes.map(n => n.group))];\n    const groupMap = Object.fromEntries(uniqueGroups.map((group, index) => [group, index]));\n    nodesByGroup.forEach((nodes, groupKey) => {\n      const groupIndex = groupMap[groupKey]; // Récupère l'index du groupe\n      nodes.forEach((node, i) => {\n        node.x = xScale(i) * Math.cos(groupIndex * angleStep);\n        node.y = xScale(i) * Math.sin(groupIndex * angleStep);\n      });\n    });\n    const line = d3.line().curve(d3.curveBundle.beta(0.85)) // Courbure ajustable avec beta (0 à 1)\n    .x(d => d.x).y(d => d.y);\n    function getAngleAxes(p1, p2) {\n      return Math.atan2(p2.y - p1.y, p2.x - p1.x);\n    }\n    function midPoint(p1, p2, d) {\n      const orth_x = p2.y - p1.y;\n      const orth_y = p1.x - p2.x;\n      const norm = Math.sqrt(orth_x * orth_x + orth_y * orth_y);\n      return {\n        x: (p1.x + p2.x) / 2 + 20 * orth_x / norm,\n        y: (p1.y + p2.y) / 2 + 20 * orth_y / norm\n      };\n    }\n    const defs = svg.append(\"defs\");\n    links.forEach((link, i) => {\n      const sourceNode = nodes.find(n => n.id === link.source);\n      const targetNode = nodes.find(n => n.id === link.target);\n      const gradient = defs.append(\"linearGradient\").attr(\"id\", `gradient-${i}`).attr(\"gradientUnits\", \"userSpaceOnUse\").attr(\"x1\", sourceNode.x).attr(\"y1\", sourceNode.y).attr(\"x2\", targetNode.x).attr(\"y2\", targetNode.y);\n      gradient.append(\"stop\").attr(\"offset\", \"0%\").attr(\"stop-color\", color(sourceNode.group));\n      gradient.append(\"stop\").attr(\"offset\", \"100%\").attr(\"stop-color\", color(targetNode.group));\n    });\n    g.selectAll(\".link\").data(filteredLinks).enter().append(\"path\").attr(\"class\", \"link\").attr(\"fill\", \"none\").attr(\"stroke-width\", d => d.value).attr(\"stroke\", (d, i) => `url(#gradient-${i})`) // Applique le gradient\n    .attr(\"stroke-opacity\", 0.2).attr(\"d\", d => {\n      const source = filteredNodes.find(n => n.id === d.source);\n      const target = filteredNodes.find(n => n.id === d.target);\n      const mid = midPoint(source, target, d);\n      return line([source, mid, target]); // Maintenant, on a 3 points pour créer une vraie courbe\n    }).attr(\"stroke-dasharray\", function () {\n      return this.getTotalLength(); // Récupère la longueur du chemin\n    }).attr(\"stroke-dashoffset\", function () {\n      return this.getTotalLength(); // Cache le chemin au départ\n    }).transition().duration(1200).delay((d, i) => 2500 + Math.random() * 1000).ease(d3.easeCubic).attr(\"stroke-dashoffset\", 0); // Dessine progressivement les liens\n\n    // Dessin des axes\n    g.selectAll(\".axis\").data(groups).enter().append(\"line\").attr(\"class\", \"axis\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", d => d.x).attr(\"y2\", d => d.y).attr(\"stroke\", \"#aaa\").attr(\"stroke-width\", 1.5).attr(\"stroke-dasharray\", d => Math.sqrt(d.x * d.x + d.y * d.y)) // Longueur du trait\n    .attr(\"stroke-dashoffset\", d => Math.sqrt(d.x * d.x + d.y * d.y)) // Masque complet du trait\n    .transition().duration(800).delay((d, i) => Math.random() * 1000).ease(d3.easeCubic).attr(\"stroke-dashoffset\", 0); // Fait apparaître progressivement l'axe\n\n    console.log(\"uniqueGroups : \", uniqueGroups);\n    g.selectAll(\".axis-label\").data(groups).enter().append(\"text\").attr(\"class\", \"axis-label\").attr(\"x\", d => d.x * 1.1) // Décale un peu pour éviter qu'il soit collé à l'axe\n    .attr(\"y\", d => d.y * 1.1).attr(\"text-anchor\", \"middle\").attr(\"alignment-baseline\", \"middle\").style(\"fill\", \"#E8EDDF\").style(\"font-size\", \"24px\").style(\"color\", \"#E8EDDF\").text((d, i) => uniqueGroups[i]) // Remplace par la vraie valeur du groupe si nécessaire\n    .style(\"opacity\", 0) // Début invisible\n    .transition().delay(2000) // Après l'affichage des axes et des nœuds\n    .duration(1000).style(\"opacity\", 1);\n\n    // Dessin des nœuds\n    const node = g.append(\"g\").selectAll(\".node\").data(filteredNodes).enter().append(\"circle\").attr(\"class\", \"node\").attr(\"cx\", d => d.x).attr(\"cy\", d => d.y).style(\"fill\", d => color(d.group));\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"position\", \"absolute\").style(\"background\", \"#333\").style(\"color\", \"white\").style(\"padding\", \"5px 10px\").style(\"border-radius\", \"5px\").style(\"display\", \"none\").style(\"pointer-events\", \"none\");\n    node.on(\"mouseover\", function (event, d) {\n      d3.select(this).transition().duration(200).attr(\"r\", d.radius * (2 * 1.5)); // Augmente la taille du nœud\n      tooltip.style(\"display\", \"block\").style(\"left\", `${event.pageX + 10}px`).style(\"top\", `${event.pageY - 10}px`).text(d.id);\n    });\n    node.on(\"mouseout\", function () {\n      d3.select(this).transition().duration(200).attr(\"r\", d => d.radius * 2);\n      tooltip.style(\"display\", \"none\");\n    });\n\n    // Appliquer la transition APRÈS avoir attaché les événements\n    node.transition().delay(1500) // Attend que les axes soient tracés\n    .duration(800).ease(d3.easeElastic).attr(\"r\", d => d.radius * 2); // Augmente progressivement la taille des nœuds\n  }, [data, selectedGroups]); // Met à jour lorsque les données ou les groupes sélectionnés changent\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"hive-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 12\n  }, this);\n}\n_s(HiveVisualization, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = HiveVisualization;\nexport default Hive;\nvar _c, _c2;\n$RefreshReg$(_c, \"Hive\");\n$RefreshReg$(_c2, \"HiveVisualization\");","map":{"version":3,"names":["React","useEffect","d3","data","jsxDEV","_jsxDEV","width","height","color","scaleOrdinal","schemeCategory10","Hive","selectedGroups","children","fileName","_jsxFileName","lineNumber","columnNumber","HiveVisualization","_c","_s","nodes","links","select","remove","map","d","filteredNodes","filter","node","has","group","filteredLinks","link","some","id","source","target","t","transition","duration","ease","easeLinear","svg","append","attr","style","g","zoom","scaleExtent","on","event","transform","call","numGroups","size","angleStep","Math","PI","radius","min","groups","Array","from","length","_","i","angle","x","cos","y","sin","nodesByGroup","maxNodes","max","values","xScale","scaleLinear","domain","range","uniqueGroups","Set","n","groupMap","Object","fromEntries","index","forEach","groupKey","groupIndex","line","curve","curveBundle","beta","getAngleAxes","p1","p2","atan2","midPoint","orth_x","orth_y","norm","sqrt","defs","sourceNode","find","targetNode","gradient","selectAll","enter","value","mid","getTotalLength","delay","random","easeCubic","console","log","text","tooltip","pageX","pageY","easeElastic","_c2","$RefreshReg$"],"sources":["C:/Jean/Scolarite/NUS/SoC/Data_vizualisation/Assignement_2/assignement2-app/src/Components/Hive.jsx"],"sourcesContent":["import React, { useEffect} from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport data from \"../assets/Hive.json\";\r\n\r\n\r\nconst width = 928 * 2;\r\nconst height = 680 * 2;\r\n\r\nconst color = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\nfunction Hive({ selectedGroups}) {\r\n    if (!data) return <p>Chargement du graphe...</p>;\r\n    // Simulation D3 et rendu\r\n    return <HiveVisualization data={data} selectedGroups={selectedGroups}/>;\r\n    }\r\n\r\nfunction HiveVisualization({ data, selectedGroups }) {    \r\n    useEffect(() => {\r\n        if (!data || !data.nodes || !data.links) return;\r\n        d3.select(\"#hive-container\").select(\"svg\").remove();\r\n\r\n        const links = data.links.map(d => ({ ...d }));\r\n        const nodes = data.nodes.map(d => ({ ...d }));    \r\n\r\n        //const filteredNodes = nodes.filter(node =>\r\n        //    node.group.some(group => selectedGroups.has(group))\r\n        //);\r\n\r\n        const filteredNodes = nodes.filter(node => selectedGroups.has(node.group));\r\n        //const filteredLinks = links.filter(link =>\r\n        //link.source_group.some(group => selectedGroups.has(group)) &&\r\n        //link.target_group.some(group => selectedGroups.has(group))\r\n        //);\r\n\r\n        const filteredLinks = links.filter(link => \r\n            filteredNodes.some(node => node.id === link.source) &&\r\n            filteredNodes.some(node => node.id === link.target)\r\n          );\r\n\r\n\r\n        const t = d3.transition()\r\n          .duration(750)\r\n          .ease(d3.easeLinear);\r\n\r\n        const svg = d3.select(\"#hive-container\")\r\n            .append(\"svg\")\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height)\r\n            .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\r\n            .style(\"max-width\", \"100%\")\r\n            .style(\"height\", \"auto\")\r\n            .style(\"border\", \"1px solid #333533\")\r\n            .style(\"border-radius\", \"8px\");\r\n\r\n        const g = svg.append(\"g\"); \r\n\r\n        // Crée une zone de zoom\r\n        const zoom = d3.zoom()\r\n            .scaleExtent([0.5, 5]) // Facteur de zoom min/max\r\n            .on(\"zoom\", (event) => {\r\n            g.attr(\"transform\", event.transform); // Applique la transformation sur le groupe contenant le graph\r\n            });\r\n\r\n            svg.call(zoom); // Active le zoom sur le SVG\r\n    \r\n        const numGroups = selectedGroups.size;\r\n        const angleStep = (2 * Math.PI) / numGroups; // Angle en radians\r\n        const radius = Math.min(width, height) / 2 - 50;\r\n    \r\n        // Positions des axes\r\n        const groups = Array.from({ length: numGroups }, (_, i) => ({\r\n        angle: i * angleStep,\r\n        x: radius * Math.cos(i * angleStep),\r\n        y: radius * Math.sin(i * angleStep),\r\n        }));\r\n\r\n        // Regroupement des nœuds par F\r\n        const nodesByGroup = d3.group(filteredNodes, (d) => d.group);\r\n    \r\n        // Échelle pour positionner les nœuds le long des axes\r\n        const maxNodes = Math.max(...Array.from(nodesByGroup.values(), (g) => g.length));\r\n        const xScale = d3.scaleLinear().domain([0, maxNodes]).range([0, radius]);\r\n        \r\n\r\n        const uniqueGroups = [...new Set(filteredNodes.map(n => n.group))];\r\n        const groupMap = Object.fromEntries(uniqueGroups.map((group, index) => [group, index]));\r\n\r\n        nodesByGroup.forEach((nodes, groupKey) => {\r\n            const groupIndex = groupMap[groupKey]; // Récupère l'index du groupe\r\n            nodes.forEach((node, i) => {\r\n                node.x = xScale(i) * Math.cos(groupIndex * angleStep);\r\n                node.y = xScale(i) * Math.sin(groupIndex * angleStep);\r\n            });\r\n        });\r\n\r\n        const line = d3\r\n            .line()\r\n            .curve(d3.curveBundle.beta(0.85)) // Courbure ajustable avec beta (0 à 1)\r\n            .x((d) => d.x)\r\n            .y((d) => d.y);\r\n\r\n        function getAngleAxes(p1, p2) {\r\n            return Math.atan2(p2.y - p1.y, p2.x - p1.x);\r\n        }\r\n\r\n        function midPoint(p1, p2, d) {\r\n            const orth_x = p2.y - p1.y;\r\n            const orth_y = p1.x - p2.x;\r\n            const norm = Math.sqrt(orth_x * orth_x + orth_y * orth_y);\r\n            return {\r\n              x: (p1.x + p2.x) / 2 + 20 * orth_x / norm,\r\n              y: (p1.y + p2.y) / 2 + 20 * orth_y / norm\r\n            };\r\n        }\r\n      \r\n        const defs = svg.append(\"defs\");\r\n\r\n        links.forEach((link, i) => {\r\n          const sourceNode = nodes.find(n => n.id === link.source);\r\n          const targetNode = nodes.find(n => n.id === link.target);\r\n        \r\n          const gradient = defs.append(\"linearGradient\")\r\n            .attr(\"id\", `gradient-${i}`)\r\n            .attr(\"gradientUnits\", \"userSpaceOnUse\")\r\n            .attr(\"x1\", sourceNode.x)\r\n            .attr(\"y1\", sourceNode.y)\r\n            .attr(\"x2\", targetNode.x)\r\n            .attr(\"y2\", targetNode.y);\r\n        \r\n          gradient.append(\"stop\")\r\n            .attr(\"offset\", \"0%\")\r\n            .attr(\"stop-color\", color(sourceNode.group));\r\n        \r\n          gradient.append(\"stop\")\r\n            .attr(\"offset\", \"100%\")\r\n            .attr(\"stop-color\", color(targetNode.group));\r\n        });\r\n\r\n      g\r\n        .selectAll(\".link\")\r\n        .data(filteredLinks)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"class\", \"link\")\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke-width\", (d) => d.value)\r\n        .attr(\"stroke\", (d, i) => `url(#gradient-${i})`) // Applique le gradient\r\n        .attr(\"stroke-opacity\", 0.2)\r\n        .attr(\"d\", (d) => {\r\n            const source = filteredNodes.find((n) => n.id === d.source);\r\n            const target = filteredNodes.find((n) => n.id === d.target);\r\n            const mid = midPoint(source, target, d);\r\n            return line([source, mid, target]); // Maintenant, on a 3 points pour créer une vraie courbe\r\n        })\r\n        .attr(\"stroke-dasharray\", function() {\r\n            return this.getTotalLength(); // Récupère la longueur du chemin\r\n          })\r\n          .attr(\"stroke-dashoffset\", function() {\r\n            return this.getTotalLength(); // Cache le chemin au départ\r\n          })\r\n          .transition()\r\n          .duration(1200)\r\n          .delay((d, i) => 2500 + Math.random() * 1000)\r\n          .ease(d3.easeCubic)\r\n          .attr(\"stroke-dashoffset\", 0); // Dessine progressivement les liens\r\n\r\n        // Dessin des axes\r\n        g\r\n        .selectAll(\".axis\")\r\n        .data(groups)\r\n        .enter()\r\n        .append(\"line\")\r\n        .attr(\"class\", \"axis\")\r\n        .attr(\"x1\", 0)\r\n        .attr(\"y1\", 0)\r\n        .attr(\"x2\", (d) => d.x)\r\n        .attr(\"y2\", (d) => d.y)\r\n        .attr(\"stroke\", \"#aaa\")\r\n        .attr(\"stroke-width\", 1.5)\r\n        .attr(\"stroke-dasharray\", (d) => Math.sqrt(d.x * d.x + d.y * d.y)) // Longueur du trait\r\n        .attr(\"stroke-dashoffset\", (d) => Math.sqrt(d.x * d.x + d.y * d.y)) // Masque complet du trait\r\n        .transition()\r\n        .duration(800)\r\n        .delay((d, i) => Math.random() * 1000)\r\n        .ease(d3.easeCubic)\r\n        .attr(\"stroke-dashoffset\", 0); // Fait apparaître progressivement l'axe\r\n\r\n\r\n      console.log(\"uniqueGroups : \", uniqueGroups);\r\n      g\r\n      .selectAll(\".axis-label\")\r\n      .data(groups)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"class\", \"axis-label\")\r\n      .attr(\"x\", (d) => d.x * 1.1) // Décale un peu pour éviter qu'il soit collé à l'axe\r\n      .attr(\"y\", (d) => d.y * 1.1)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"alignment-baseline\", \"middle\")\r\n      .style(\"fill\", \"#E8EDDF\")\r\n      .style(\"font-size\", \"24px\")\r\n      .style(\"color\", \"#E8EDDF\")\r\n      .text((d, i) => uniqueGroups[i]) // Remplace par la vraie valeur du groupe si nécessaire\r\n      .style(\"opacity\", 0) // Début invisible\r\n      .transition()\r\n      .delay(2000) // Après l'affichage des axes et des nœuds\r\n      .duration(1000)\r\n      .style(\"opacity\", 1);\r\n  \r\n      // Dessin des nœuds\r\n      const node = g.append(\"g\")\r\n      .selectAll(\".node\")\r\n      .data(filteredNodes)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"class\", \"node\")\r\n      .attr(\"cx\", (d) => d.x)\r\n      .attr(\"cy\", (d) => d.y)\r\n      .style(\"fill\", (d) => color(d.group));\r\n\r\n\r\n      const tooltip = d3.select(\"body\").append(\"div\")\r\n      .attr(\"class\", \"tooltip\")\r\n      .style(\"position\", \"absolute\")\r\n      .style(\"background\", \"#333\")\r\n      .style(\"color\", \"white\")\r\n      .style(\"padding\", \"5px 10px\")\r\n      .style(\"border-radius\", \"5px\")\r\n      .style(\"display\", \"none\")\r\n      .style(\"pointer-events\", \"none\");\r\n    \r\n      node.on(\"mouseover\", function (event, d) {\r\n          d3.select(this).transition().duration(200).attr(\"r\", d.radius * (2*1.5)); // Augmente la taille du nœud\r\n          tooltip.style(\"display\", \"block\")\r\n              .style(\"left\", `${event.pageX + 10}px`)\r\n              .style(\"top\", `${event.pageY - 10}px`)\r\n              .text(d.id);\r\n      });\r\n      \r\n      node.on(\"mouseout\", function () {\r\n          d3.select(this)\r\n          .transition()\r\n          .duration(200)\r\n          .attr(\"r\", d => d.radius*2); \r\n          tooltip.style(\"display\", \"none\");\r\n      });\r\n    \r\n    // Appliquer la transition APRÈS avoir attaché les événements\r\n    node.transition()\r\n        .delay(1500) // Attend que les axes soient tracés\r\n        .duration(800)\r\n        .ease(d3.easeElastic)\r\n        .attr(\"r\", d => d.radius*2); // Augmente progressivement la taille des nœuds\r\n\r\n    }, [data, selectedGroups]); // Met à jour lorsque les données ou les groupes sélectionnés changent\r\n    return <div id=\"hive-container\"></div>;\r\n    }\r\n\r\nexport default Hive;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}