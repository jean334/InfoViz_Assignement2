{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jean\\\\Scolarite\\\\NUS\\\\SoC\\\\Data_vizualisation\\\\Assignement_2\\\\assignement2-app\\\\src\\\\Components\\\\TreeMap.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport data from \"../assets/treeMap.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TreeMap({\n  selectedGroups\n}) {\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading viz...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GraphVisualization, {\n    selectedGroups: selectedGroups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this); //data={data} selectedGroups={selectedGroups} />;\n}\n_c = TreeMap;\nfunction GraphVisualization({\n  selectedGroups\n}) {\n  _s();\n  //width --> half the screen width\n  const width = window.innerWidth / 2;\n  const height = 400;\n  let selectedGroupsSet = new Set(selectedGroups);\n  useEffect(() => {\n    if (!data) return;\n    const nodes = data.children.map(d => ({\n      ...d\n    }));\n    let filteredData = {\n      ...data,\n      children: data.children.filter(node => selectedGroupsSet.has(node.name))\n    };\n    d3.select(\"#treemap-container\").select(\"svg\").remove();\n    const color = d3.scaleOrdinal(filteredData.children.map(d => d.name), d3.schemeTableau10);\n    const root = d3.treemap().tile(d3.treemapSquarify).size([width, height]).padding(1).round(true)(d3.hierarchy(filteredData).sum(d => d.value).sort((a, b) => b.value - a.value));\n    const svg = d3.select(\"#treemap-container\").append(\"svg\").attr(\"viewBox\", `0 0 ${width} ${height}`).attr(\"width\", width).attr(\"height\", height).style(\"font\", \"10px sans-serif\");\n    const z = svg.append(\"g\");\n    const zoom = d3.zoom().scaleExtent([0.5, 5]).on(\"zoom\", event => {\n      z.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    const leaf = z.selectAll(\"g\").data(root.leaves()).join(\"g\").attr(\"transform\", d => `translate(${d.x0},${d.y0})`);\n    const formatPercent = d3.format(\".2%\");\n    const format = d3.format(\",d\");\n    leaf.append(\"title\").text(d => `${d.ancestors().reverse().map(d => d.data.name).join(\".\")}\\n${format(d.value)}`);\n    leaf.append(\"rect\").attr(\"fill\", d => {\n      while (d.depth > 1) d = d.parent;\n      return color(d.data.name);\n    }).attr(\"fill-opacity\", 1).attr(\"width\", d => d.x1 - d.x0).attr(\"height\", d => d.y1 - d.y0);\n    leaf.append(\"text\").selectAll(\"tspan\").data(d => d.data.name.split(/(?=[A-Z][a-z])|\\s+/g).concat(formatPercent(d.value / d.parent.value))) //.concat(format(d.value))\n    .join(\"tspan\").attr(\"x\", 3).attr(\"y\", (d, i, nodes) => `${(i === nodes.length - 1) * 0.3 + 1.1 + i * 0.9}em`).attr(\"fill-opacity\", (d, i, nodes) => i === nodes.length - 1 ? 1 : 1).text(d => d).style(\"fill\", (d, i, nodes) => i === nodes.length - 1 ? \"#FDF0D5\" : \"#FDF0D5\").style(\"font-size\", (d, i, nodes) => i === nodes.length - 1 ? \"1em\" : \".6em\").style(\"font-weight\", (d, i, nodes) => i === nodes.length - 1 ? \"bold\" : \"normal\").classed(\"percentage-text\", (d, i, nodes) => i === nodes.length - 1);\n    const categories = Array.from(new Set(root.children.map(d => d.data.name)));\n    const legendData = categories.map(category => ({\n      name: category,\n      color: color(category)\n    }));\n    const legend = svg.append(\"g\");\n    const background = legend.append(\"g\").attr(\"class\", \"background\").append(\"rect\").attr(\"width\", 150).attr(\"height\", 175).attr(\"x\", -5).attr(\"y\", -5).attr(\"fill\", \"#333533\").attr(\"opacity\", 0.8);\n    legend.attr(\"transform\", `translate(${width - 150}, ${10})`);\n    const legendItem = legend.selectAll(\".legend-item\").data(legendData).join(\"g\").append(\"g\").attr(\"class\", \"legend-item\").attr(\"transform\", (d, i) => `translate(0, ${i * 25})`);\n    legendItem.append(\"rect\").attr(\"width\", 15).attr(\"height\", 15).attr(\"fill\", d => d.color);\n    legendItem.append(\"text\").attr(\"x\", 20).attr(\"y\", 12).text(d => d.name).style(\"font-size\", \"20px\").style(\"fill\", \"#FDF0D5\").attr(\"alignment-baseline\", \"middle\");\n  }, [data, selectedGroups, selectedGroupsSet]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"treemap-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n}\n_s(GraphVisualization, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = GraphVisualization;\n;\nexport default TreeMap;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeMap\");\n$RefreshReg$(_c2, \"GraphVisualization\");","map":{"version":3,"names":["useEffect","useRef","d3","data","jsxDEV","_jsxDEV","TreeMap","selectedGroups","children","fileName","_jsxFileName","lineNumber","columnNumber","GraphVisualization","_c","_s","width","window","innerWidth","height","selectedGroupsSet","Set","nodes","map","d","filteredData","filter","node","has","name","select","remove","color","scaleOrdinal","schemeTableau10","root","treemap","tile","treemapSquarify","size","padding","round","hierarchy","sum","value","sort","a","b","svg","append","attr","style","z","zoom","scaleExtent","on","event","transform","call","leaf","selectAll","leaves","join","x0","y0","formatPercent","format","text","ancestors","reverse","depth","parent","x1","y1","split","concat","i","length","classed","categories","Array","from","legendData","category","legend","background","legendItem","id","_c2","$RefreshReg$"],"sources":["C:/Jean/Scolarite/NUS/SoC/Data_vizualisation/Assignement_2/assignement2-app/src/Components/TreeMap.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport data from \"../assets/treeMap.json\";\r\n\r\n\r\nfunction TreeMap({ selectedGroups }) {\r\n    if (!data) return <p>Loading viz...</p>;\r\n  \r\n    return <GraphVisualization selectedGroups={selectedGroups}/>; //data={data} selectedGroups={selectedGroups} />;\r\n  }\r\n\r\nfunction GraphVisualization({selectedGroups}) {\r\n    //width --> half the screen width\r\n    const width = window.innerWidth / 2;\r\n    const height = 400;\r\n    let selectedGroupsSet = new Set(selectedGroups);\r\n\r\n    useEffect(() => {\r\n        if (!data) return;      \r\n        const nodes = data.children.map(d => ({ ...d }));\r\n\r\n        let filteredData = {\r\n            ...data, \r\n            children: data.children.filter(node => selectedGroupsSet.has(node.name))\r\n          };\r\n          \r\n        \r\n        d3.select(\"#treemap-container\").select(\"svg\").remove();\r\n\r\n        const color = d3.scaleOrdinal(filteredData.children.map((d) => d.name), d3.schemeTableau10);\r\n\r\n        const root = d3.treemap()\r\n        .tile(d3.treemapSquarify)\r\n        .size([width, height])\r\n        .padding(1)\r\n        .round(true)(\r\n            d3.hierarchy(filteredData)\r\n            .sum((d) => d.value)\r\n            .sort((a, b) => b.value - a.value)\r\n        );\r\n\r\n        const svg = d3.select(\"#treemap-container\")\r\n        .append(\"svg\")\r\n        .attr(\"viewBox\", `0 0 ${width} ${height}`)\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"font\", \"10px sans-serif\");\r\n\r\n\r\n        const z = svg.append(\"g\");\r\n\r\n        const zoom = d3.zoom()\r\n            .scaleExtent([0.5, 5]) \r\n            .on(\"zoom\", (event) => {\r\n            z.attr(\"transform\", event.transform); \r\n            });\r\n    \r\n        svg.call(zoom);\r\n\r\n        const leaf = z.selectAll(\"g\")\r\n        .data(root.leaves())\r\n        .join(\"g\")\r\n        .attr(\"transform\", (d) => `translate(${d.x0},${d.y0})`);\r\n        \r\n        const formatPercent = d3.format(\".2%\");\r\n        const format = d3.format(\",d\");\r\n        leaf.append(\"title\").text((d) =>\r\n        `${d.ancestors().reverse().map((d) => d.data.name).join(\".\")}\\n${format(d.value)}`\r\n        );\r\n        \r\n        leaf.append(\"rect\")\r\n        .attr(\"fill\", (d) => {\r\n            while (d.depth > 1) d = d.parent;\r\n            return color(d.data.name);\r\n        })\r\n        .attr(\"fill-opacity\", 1)\r\n        .attr(\"width\", (d) => d.x1 - d.x0)\r\n        .attr(\"height\", (d) => d.y1 - d.y0);\r\n\r\n\r\n        leaf.append(\"text\")\r\n        .selectAll(\"tspan\")\r\n        .data((d) => d.data.name.split(/(?=[A-Z][a-z])|\\s+/g).concat(formatPercent(d.value/d.parent.value)))//.concat(format(d.value))\r\n        .join(\"tspan\")\r\n        .attr(\"x\", 3)\r\n        .attr(\"y\", (d, i, nodes) => `${(i === nodes.length - 1) * 0.3 + 1.1 + i * 0.9}em`)\r\n        .attr(\"fill-opacity\", (d, i, nodes) => (i === nodes.length - 1 ? 1 : 1))\r\n        .text((d) => d)\r\n        .style(\"fill\", (d, i, nodes) => (i === nodes.length - 1 ? \"#FDF0D5\" : \"#FDF0D5\"))\r\n        .style(\"font-size\", (d, i, nodes) => (i === nodes.length - 1 ? \"1em\" : \".6em\")) \r\n        .style(\"font-weight\", (d, i, nodes) => (i === nodes.length - 1 ? \"bold\" : \"normal\"))\r\n        .classed(\"percentage-text\", (d, i, nodes) => i === nodes.length - 1)\r\n\r\n\r\n        const categories = Array.from(new Set(root.children.map(d => d.data.name)));\r\n        const legendData = categories.map(category => ({ \r\n            name: category, \r\n            color: color(category) \r\n        }));\r\n        \r\n        const legend = svg.append(\"g\")\r\n            const background = legend.append(\"g\")\r\n            .attr(\"class\", \"background\")\r\n            .append(\"rect\")\r\n            .attr(\"width\", 150)\r\n            .attr(\"height\", 175)    \r\n            .attr(\"x\", -5)\r\n            .attr(\"y\", -5)\r\n            .attr(\"fill\", \"#333533\")\r\n            .attr(\"opacity\", 0.8)\r\n        \r\n        \r\n        legend.attr(\"transform\", `translate(${width - 150}, ${10})`); \r\n            const legendItem = legend.selectAll(\".legend-item\")\r\n                                    .data(legendData)\r\n                                    .join(\"g\")\r\n                                    .append(\"g\")\r\n                                    .attr(\"class\", \"legend-item\")\r\n                                    .attr(\"transform\", (d, i) => `translate(0, ${i * 25})`);\r\n\r\n            legendItem.append(\"rect\")\r\n                .attr(\"width\", 15)\r\n                .attr(\"height\", 15)\r\n                .attr(\"fill\", d => d.color);\r\n\r\n            legendItem.append(\"text\")\r\n                .attr(\"x\", 20)\r\n                .attr(\"y\", 12)\r\n                .text(d => d.name)\r\n                .style(\"font-size\", \"20px\")\r\n                .style(\"fill\", \"#FDF0D5\")\r\n                .attr(\"alignment-baseline\", \"middle\");\r\n    }, [data, selectedGroups, selectedGroupsSet]);\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"treemap-container\"></div>;\r\n        </div>\r\n    );\r\n    };\r\n\r\nexport default TreeMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}