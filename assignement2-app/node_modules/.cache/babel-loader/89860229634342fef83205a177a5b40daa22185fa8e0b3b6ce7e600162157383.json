{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jean\\\\Scolarite\\\\NUS\\\\SoC\\\\Data_vizualisation\\\\Assignement_2\\\\assignement2-app\\\\src\\\\Components\\\\BarRace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\n//import data from \"../assets/category-brands.csv\";\nimport * as d3 from \"d3\";\nimport data from \"../assets/barRace1.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateKeyframes = () => {\n  const data = [{\n    name: \"A\",\n    value: Math.random() * 100\n  }, {\n    name: \"B\",\n    value: Math.random() * 100\n  }, {\n    name: \"C\",\n    value: Math.random() * 100\n  }, {\n    name: \"D\",\n    value: Math.random() * 100\n  }];\n\n  // Générer des keyframes avec classement dynamique\n  const keyframes = Array.from({\n    length: 20\n  }, (_, i) => {\n    // Augmenter les valeurs de manière aléatoire\n    const updatedData = data.map(d => ({\n      ...d,\n      value: d.value + Math.random() * 10\n    }));\n\n    // Classer les données par valeur décroissante et leur attribuer un rang\n    const rankedData = updatedData.sort((a, b) => b.value - a.value).map((d, index) => ({\n      ...d,\n      rank: index\n    }));\n    return [`2025-03-${i + 1}`, rankedData]; // Keyframe : date + données classées\n  });\n  return keyframes;\n};\nconst BarRace = ({\n  duration = 250,\n  width = 800,\n  height = 600,\n  n = 12\n}) => {\n  _s();\n  const keyframes = data; //generateKeyframes();\n  //const keyframes = generateKeyframes();\n  console.log(keyframes);\n  const svgRef = useRef();\n  const [replay, setReplay] = useState(false); // État pour gérer le replay\n  const barSize = 48;\n  const marginTop = 16;\n  const marginBottom = 6;\n  const marginLeft = 0;\n  const marginRight = 100;\n  console.log(\"n : \", n);\n  const x = d3.scaleLinear([0, 1], [marginLeft, width - marginRight]);\n  const y = d3.scaleBand().domain(d3.range(n)).rangeRound([marginTop, marginTop + barSize * n]).padding(0.1);\n  const colorScale = d3.scaleOrdinal(d3.schemeTableau10);\n  const replayAnimation = () => {\n    setReplay(false);\n    setTimeout(() => setReplay(true), 0); // Redémarrer l'animation en modifiant l'état\n  };\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove(); // Réinitialiser SVG à chaque redémarrage\n    svg.attr(\"viewBox\", [0, 0, width, height]).attr(\"width\", width).attr(\"height\", height);\n    const gBars = svg.append(\"g\").attr(\"fill-opacity\", 1);\n    const gLabels = svg.append(\"g\").attr(\"text-anchor\", \"end\");\n    const gTicker = svg.append(\"text\").attr(\"x\", width - 6).attr(\"y\", marginTop).style(\"font\", `bold ${barSize}px sans-serif`);\n    const updateBars = (data, transition) => {\n      const bars = gBars.selectAll(\"rect\").data(data, d => d.name);\n      bars.join(enter => enter.append(\"rect\").attr(\"fill\", d => colorScale(d.name)).attr(\"x\", x(0)).attr(\"y\", d => y(d.rank)).attr(\"height\", y.bandwidth()).attr(\"width\", d => x(d.value / 5) - x(0)), update => update, exit => exit.transition(transition).attr(\"width\", 0).remove()).call(bar => bar.transition(transition).attr(\"y\", d => y(d.rank)) // Mise à jour correcte de la position verticale\n      .attr(\"width\", d => x(d.value) - x(0)));\n    };\n    const updateLabels = (data, transition) => {\n      const labels = gLabels.selectAll(\"text\").data(data, d => d.name);\n      labels.join(enter => enter.append(\"text\").attr(\"x\", -6).attr(\"y\", d => y(d.rank) + y.bandwidth() / 2).attr(\"dy\", \"0.35em\").text(d => d.name + \": \" + Math.round(d.value)),\n      // Affiche la valeur initiale\n      update => update,\n      // On passe les éléments existants pour la mise à jour suivante\n      exit => exit.transition(transition).attr(\"opacity\", 0).remove() // Sortie avec transition\n      ).call(label => label.transition(transition) // Met à jour la position\n      .attr(\"x\", 100).attr(\"y\", d => y(d.rank) + y.bandwidth() / 2).selection() // Terminer la transition\n      .text(d => d.name + \": \" + Math.round(d.value)));\n    };\n    const updateTicker = (date, transition) => {\n      gTicker.transition(transition).text(date).attr('x', 100).attr('y', marginTop + 200);\n    };\n    (async function animateChart() {\n      for (const {\n        date,\n        val\n      } of keyframes) {\n        if (!val || val.length === 0) continue; // Ignore les frames vides\n\n        const transition = svg.transition().duration(duration).ease(d3.easeLinear);\n        x.domain([0, 3000]);\n        updateBars(val, transition);\n        updateLabels(val, transition);\n        updateTicker(date, transition);\n        try {\n          await transition.end();\n        } catch (e) {\n          console.warn(\"Transition interrompue :\", e);\n        }\n      }\n    })();\n  }, [keyframes, duration, replay, x, y, colorScale]); // Rejouer l'animation lorsqu'on change l'état replay\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: replayAnimation,\n      children: \"Replay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 7\n  }, this);\n};\n_s(BarRace, \"MmrHNShklPhzlheXlU4SHRhQdzY=\");\n_c = BarRace;\nexport default BarRace;\nvar _c;\n$RefreshReg$(_c, \"BarRace\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","data","jsxDEV","_jsxDEV","generateKeyframes","name","value","Math","random","keyframes","Array","from","length","_","i","updatedData","map","d","rankedData","sort","a","b","index","rank","BarRace","duration","width","height","n","_s","console","log","svgRef","replay","setReplay","barSize","marginTop","marginBottom","marginLeft","marginRight","x","scaleLinear","y","scaleBand","domain","range","rangeRound","padding","colorScale","scaleOrdinal","schemeTableau10","replayAnimation","setTimeout","svg","select","current","selectAll","remove","attr","gBars","append","gLabels","gTicker","style","updateBars","transition","bars","join","enter","bandwidth","update","exit","call","bar","updateLabels","labels","text","round","label","selection","updateTicker","date","animateChart","val","ease","easeLinear","end","e","warn","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Jean/Scolarite/NUS/SoC/Data_vizualisation/Assignement_2/assignement2-app/src/Components/BarRace.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n//import data from \"../assets/category-brands.csv\";\r\nimport * as d3 from \"d3\";\r\nimport data from \"../assets/barRace1.json\";\r\n\r\nconst generateKeyframes = () => {\r\n  const data = [\r\n    { name: \"A\", value: Math.random() * 100 },\r\n    { name: \"B\", value: Math.random() * 100 },\r\n    { name: \"C\", value: Math.random() * 100 },\r\n    { name: \"D\", value: Math.random() * 100 },\r\n  ];\r\n\r\n  // Générer des keyframes avec classement dynamique\r\n  const keyframes = Array.from({ length: 20 }, (_, i) => {\r\n    // Augmenter les valeurs de manière aléatoire\r\n    const updatedData = data.map((d) => ({ ...d, value: d.value + Math.random() * 10 }));\r\n\r\n    // Classer les données par valeur décroissante et leur attribuer un rang\r\n    const rankedData = updatedData\r\n      .sort((a, b) => b.value - a.value)\r\n      .map((d, index) => ({ ...d, rank: index }));\r\n\r\n    return [`2025-03-${i + 1}`, rankedData]; // Keyframe : date + données classées\r\n  });\r\n\r\n  return keyframes;\r\n};\r\n\r\n  \r\n  const BarRace = ({duration = 250, width = 800, height = 600, n = 12 }) => {\r\n    const keyframes = data;//generateKeyframes();\r\n    //const keyframes = generateKeyframes();\r\n    console.log(keyframes);\r\n    const svgRef = useRef();\r\n    const [replay, setReplay] = useState(false); // État pour gérer le replay\r\n    const barSize = 48;\r\n    const marginTop = 16;\r\n    const marginBottom = 6;\r\n    const marginLeft = 0;\r\n    const marginRight = 100;\r\n\r\n    console.log(\"n : \", n);\r\n  \r\n    const x = d3.scaleLinear([0, 1], [marginLeft, width - marginRight]);\r\n    const y = d3\r\n      .scaleBand()\r\n      .domain(d3.range(n))\r\n      .rangeRound([marginTop, marginTop + barSize * n])\r\n      .padding(0.1);\r\n  \r\n    const colorScale = d3.scaleOrdinal(d3.schemeTableau10);\r\n  \r\n    const replayAnimation = () => {\r\n      setReplay(false);\r\n      setTimeout(() => setReplay(true), 0); // Redémarrer l'animation en modifiant l'état\r\n    };\r\n  \r\n    useEffect(() => {\r\n      const svg = d3.select(svgRef.current);\r\n      svg.selectAll(\"*\").remove(); // Réinitialiser SVG à chaque redémarrage\r\n      svg\r\n        .attr(\"viewBox\", [0, 0, width, height])\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height);\r\n  \r\n      const gBars = svg.append(\"g\").attr(\"fill-opacity\", 1);\r\n      const gLabels = svg.append(\"g\").attr(\"text-anchor\", \"end\");\r\n      const gTicker = svg.append(\"text\").attr(\"x\", width - 6).attr(\"y\", marginTop).style(\"font\", `bold ${barSize}px sans-serif`);\r\n  \r\n      const updateBars = (data, transition) => {\r\n        const bars = gBars.selectAll(\"rect\").data(data, (d) => d.name);\r\n  \r\n        bars\r\n          .join(\r\n            (enter) =>\r\n              enter\r\n                .append(\"rect\")\r\n                .attr(\"fill\", (d) => colorScale(d.name))\r\n                .attr(\"x\", x(0))\r\n                .attr(\"y\", (d) => y(d.rank))\r\n                .attr(\"height\", y.bandwidth())\r\n                .attr(\"width\", (d) => x(d.value/5) - x(0)),\r\n            (update) => update,\r\n            (exit) => exit.transition(transition).attr(\"width\", 0).remove()\r\n          )\r\n          .call((bar) =>\r\n            bar\r\n              .transition(transition)\r\n              .attr(\"y\", (d) => y(d.rank)) // Mise à jour correcte de la position verticale\r\n              .attr(\"width\", (d) => x(d.value) - x(0))\r\n          );\r\n      };\r\n  \r\n      const updateLabels = (data, transition) => {\r\n        const labels = gLabels.selectAll(\"text\").data(data, (d) => d.name);\r\n        \r\n        labels\r\n          .join(\r\n            (enter) =>\r\n              enter\r\n                .append(\"text\")\r\n                .attr(\"x\", -6)\r\n                .attr(\"y\", (d) => y(d.rank) + y.bandwidth() / 2)\r\n                .attr(\"dy\", \"0.35em\")\r\n                .text((d) => d.name + \": \" + Math.round(d.value)), // Affiche la valeur initiale\r\n            (update) =>\r\n              update, // On passe les éléments existants pour la mise à jour suivante\r\n            (exit) =>\r\n              exit.transition(transition).attr(\"opacity\", 0).remove() // Sortie avec transition\r\n          )\r\n          .call((label) =>\r\n            label\r\n              .transition(transition) // Met à jour la position\r\n              .attr(\"x\", 100)\r\n              .attr(\"y\", (d) => y(d.rank) + y.bandwidth() / 2)\r\n              .selection() // Terminer la transition\r\n              .text((d) => d.name + \": \" + Math.round(d.value)) \r\n          );\r\n      };\r\n  \r\n      const updateTicker = (date, transition) => {\r\n        gTicker.transition(transition).text(date)\r\n          .attr('x', 100)\r\n          .attr('y', marginTop + 200);\r\n      };\r\n\r\n      \r\n      (async function animateChart() {\r\n        for (const { date, val } of keyframes) {\r\n          if (!val || val.length === 0) continue; // Ignore les frames vides\r\n      \r\n          const transition = svg.transition().duration(duration).ease(d3.easeLinear);\r\n          \r\n          x.domain([0, 3000]); \r\n      \r\n          updateBars(val, transition);\r\n          updateLabels(val, transition);\r\n          updateTicker(date, transition);\r\n      \r\n          try {\r\n            await transition.end();\r\n          } catch (e) {\r\n            console.warn(\"Transition interrompue :\", e);\r\n          }\r\n        }\r\n      })();\r\n      \r\n    }, [keyframes, duration, replay, x, y, colorScale]); // Rejouer l'animation lorsqu'on change l'état replay\r\n  \r\n    return (\r\n      <div>\r\n        <button onClick={replayAnimation}>Replay</button> {/* Bouton Replay */}\r\n        <svg ref={svgRef}></svg>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default BarRace;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}