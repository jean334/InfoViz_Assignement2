{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jean\\\\Scolarite\\\\NUS\\\\SoC\\\\Data_vizualisation\\\\Assignement_2\\\\assignement2-app\\\\src\\\\Components\\\\Tree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport data from \"../assets/tree.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tree({\n  selectedGroups\n}) {\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Chargement du graphe...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 23\n  }, this);\n  // Simulation D3 et rendu\n  return /*#__PURE__*/_jsxDEV(TreeVisualization, {\n    data: data,\n    selectedGroups: selectedGroups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n}\n_c = Tree;\nfunction TreeVisualization({\n  data,\n  selectedGroups\n}) {\n  _s();\n  const containerRef = useRef();\n  useEffect(() => {\n    if (!data || !data.children) return;\n\n    // Nettoyage avant rendu\n    d3.select(containerRef.current).select(\"svg\").remove();\n\n    // Dimensions\n    const width = 1400;\n    const height = 600;\n    const margin = {\n      top: 50,\n      right: 150,\n      bottom: 50,\n      left: 150\n    };\n\n    // Création du SVG\n    const svg = d3.select(containerRef.current).append(\"svg\").attr(\"width\", width).attr(\"height\", height).style(\"max-width\", \"100%\").style(\"border\", \"1px solid #333\").style(\"border-radius\", \"8px\");\n    const g = svg.append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n    const initialScale = 0.3;\n    const initialTranslate = [width / 2, height / 2];\n    svg.call(d3.zoom().scaleExtent([0.25, 2]).on(\"zoom\", event => g.attr(\"transform\", event.transform)));\n    const root = d3.hierarchy(data);\n    const treeLayout = d3.tree().size([height * 3 - margin.top - margin.bottom, width - margin.left - margin.right]);\n    treeLayout(root);\n    const linkGenerator = d3.linkHorizontal().x(d => d.x).y(d => d.y);\n    g.selectAll(\".link\").data(root.links()).enter().append(\"path\").attr(\"class\", \"link\").attr(\"d\", linkGenerator).style(\"fill\", \"none\").style(\"stroke\", \"#999\").style(\"stroke-width\", 2).attr(\"stroke-dasharray\", function () {\n      return this.getTotalLength();\n    }).attr(\"stroke-dashoffset\", function () {\n      return this.getTotalLength();\n    }).transition().duration(1200).delay((d, i) => 3000 + Math.random() * 1000).ease(d3.easeCubic).attr(\"stroke-dashoffset\", 0);\n    const nodes = g.selectAll(\".node\").data(root.descendants()).enter().append(\"g\").attr(\"class\", \"node\").attr(\"transform\", d => `translate(${d.x},${d.y})`);\n    nodes.append(\"circle\").attr(\"r\", 6).style(\"fill\", \"#69b3a2\").style(\"stroke\", \"#333\").style(\"stroke-width\", 1.5);\n    nodes.append(\"text\").attr(\"dy\", 4).attr(\"x\", d => d.children ? -10 : 10).attr(\"text-anchor\", d => d.children ? \"end\" : \"start\").style(\"font-size\", \"14px\").attr(\"transform\", \"rotate(90)\").style(\"fill\", \"#fff\").text(d => d.data.name).style(\"opacity\", 0).transition().delay(3000 + 2000).duration(1000).style(\"opacity\", 1);\n  }, [data, selectedGroups]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 12\n  }, this);\n}\n_s(TreeVisualization, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c2 = TreeVisualization;\nexport default Tree;\nvar _c, _c2;\n$RefreshReg$(_c, \"Tree\");\n$RefreshReg$(_c2, \"TreeVisualization\");","map":{"version":3,"names":["React","useEffect","useRef","d3","data","jsxDEV","_jsxDEV","Tree","selectedGroups","children","fileName","_jsxFileName","lineNumber","columnNumber","TreeVisualization","_c","_s","containerRef","select","current","remove","width","height","margin","top","right","bottom","left","svg","append","attr","style","g","initialScale","initialTranslate","call","zoom","scaleExtent","on","event","transform","root","hierarchy","treeLayout","tree","size","linkGenerator","linkHorizontal","x","d","y","selectAll","links","enter","getTotalLength","transition","duration","delay","i","Math","random","ease","easeCubic","nodes","descendants","text","name","ref","_c2","$RefreshReg$"],"sources":["C:/Jean/Scolarite/NUS/SoC/Data_vizualisation/Assignement_2/assignement2-app/src/Components/Tree.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport data from \"../assets/tree.json\";\r\n\r\n\r\nfunction Tree({selectedGroups}) {\r\n    if (!data) return <p>Chargement du graphe...</p>;\r\n    // Simulation D3 et rendu\r\n    return <TreeVisualization data={data} selectedGroups={selectedGroups}/>;\r\n}\r\n\r\nfunction TreeVisualization({data, selectedGroups}) {\r\n    const containerRef = useRef();\r\n\r\n    useEffect(() => {\r\n      if (!data || !data.children) return;\r\n  \r\n      // Nettoyage avant rendu\r\n      d3.select(containerRef.current).select(\"svg\").remove();\r\n  \r\n      // Dimensions\r\n      const width = 1400;\r\n      const height = 600;\r\n      const margin = { top: 50, right: 150, bottom: 50, left: 150 };\r\n\r\n      // Création du SVG\r\n      const svg = d3\r\n        .select(containerRef.current)\r\n        .append(\"svg\")\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .style(\"max-width\", \"100%\")\r\n        .style(\"border\", \"1px solid #333\")\r\n        .style(\"border-radius\", \"8px\");\r\n  \r\n      const g = svg.append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n      const initialScale = 0.3;\r\n      const initialTranslate = [width / 2, height / 2];\r\n\r\n      svg.call(\r\n        d3.zoom()\r\n          .scaleExtent([0.25, 2])\r\n          .on(\"zoom\", (event) => g.attr(\"transform\", event.transform))\r\n      );\r\n\r\n\r\n      const root = d3.hierarchy(data);\r\n  \r\n\r\n  \r\n      const treeLayout = d3\r\n        .tree()\r\n        .size([height*3 - margin.top - margin.bottom, width - margin.left - margin.right]);\r\n  \r\n      treeLayout(root);\r\n  \r\n      const linkGenerator = d3\r\n        .linkHorizontal()\r\n        .x(d => d.x)\r\n        .y(d => d.y);\r\n\r\n      g.selectAll(\".link\")\r\n        .data(root.links())\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"class\", \"link\")\r\n        .attr(\"d\", linkGenerator)\r\n        .style(\"fill\", \"none\")\r\n        .style(\"stroke\", \"#999\")\r\n        .style(\"stroke-width\", 2)\r\n        .attr(\"stroke-dasharray\", function() {\r\n            return this.getTotalLength(); \r\n          })\r\n          .attr(\"stroke-dashoffset\", function() {\r\n            return this.getTotalLength();\r\n          })\r\n        .transition()\r\n        .duration(1200)\r\n        .delay((d, i) => 3000 + Math.random() * 1000)\r\n        .ease(d3.easeCubic)\r\n        .attr(\"stroke-dashoffset\", 0);\r\n  \r\n      const nodes = g.selectAll(\".node\")\r\n        .data(root.descendants())\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"node\")\r\n        .attr(\"transform\", d => `translate(${d.x},${d.y})`);\r\n  \r\n      nodes.append(\"circle\")\r\n        .attr(\"r\", 6)\r\n        .style(\"fill\", \"#69b3a2\")\r\n        .style(\"stroke\", \"#333\")\r\n        .style(\"stroke-width\", 1.5);\r\n  \r\n      nodes.append(\"text\")\r\n        .attr(\"dy\", 4)\r\n        .attr(\"x\", d => (d.children ? -10 : 10))\r\n        .attr(\"text-anchor\", d => (d.children ? \"end\" : \"start\"))\r\n        .style(\"font-size\", \"14px\")\r\n        .attr(\"transform\", \"rotate(90)\")\r\n        .style(\"fill\", \"#fff\")\r\n        .text(d => d.data.name)\r\n        .style(\"opacity\", 0)\r\n        .transition()\r\n        .delay(3000 + 2000)\r\n        .duration(1000)\r\n        .style(\"opacity\", 1);\r\n  \r\n    }, [data, selectedGroups]);\r\n  \r\n    return <div ref={containerRef}></div>;\r\n  }\r\n\r\nexport default Tree;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}