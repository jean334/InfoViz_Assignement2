{"ast":null,"code":"var _jsxFileName = \"C:\\\\Jean\\\\Scolarite\\\\NUS\\\\SoC\\\\Data_vizualisation\\\\Assignement_2\\\\assignement2-app\\\\src\\\\Components\\\\ParallelPlot.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParallelPlot() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    d3.dsv(\",\", \"/assets/cars.csv\", d => ({\n      week: d.week.slice(0, 10),\n      count: +d.count\n    })).then(loadedData => {\n      setData(loadedData);\n    });\n  }, []);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading viz...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GraphVisualization, {\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n}\n_s(ParallelPlot, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = ParallelPlot;\nfunction GraphVisualization({\n  data\n}) {\n  _s2();\n  // Specify the chart’s dimensions.\n  const keys = data.columns.slice(1);\n  const width = 928;\n  const height = keys.length * 120;\n  const marginTop = 20;\n  const marginRight = 10;\n  const marginBottom = 20;\n  const marginLeft = 10;\n  useEffect(() => {\n    d3.select(\"#parralel-container\").select(\"svg\").remove();\n  }, [data]);\n\n  // Create an horizontal (*x*) scale for each key.\n  const x = new Map(Array.from(keys, key => [key, d3.scaleLinear(d3.extent(data, d => d[key]), [marginLeft, width - marginRight])]));\n\n  // Create the vertical (*y*) scale.\n  const y = d3.scalePoint(keys, [marginTop, height - marginBottom]);\n\n  // Create the color scale.\n  const color = d3.scaleSequential(x.get(keyz).domain(), t => d3.interpolateBrBG(1 - t));\n\n  // Create the SVG container.\n  //const svg = d3.create(\"svg\")\n  const svg = d3.select(\"#parralel-container\").append(\"svg\").attr(\"viewBox\", [0, 0, width, height]).attr(\"width\", width).attr(\"height\", height).attr(\"style\", \"max-width: 100%; height: auto;\");\n\n  // Append the lines.\n  const line = d3.line().defined(([, value]) => value != null).x(([key, value]) => x.get(key)(value)).y(([key]) => y(key));\n  svg.append(\"g\").attr(\"fill\", \"none\").attr(\"stroke-width\", 1.5).attr(\"stroke-opacity\", 0.4).selectAll(\"path\").data(data.slice().sort((a, b) => d3.ascending(a[keyz], b[keyz]))).join(\"path\").attr(\"stroke\", d => color(d[keyz])).attr(\"d\", d => line(d3.cross(keys, [d], (key, d) => [key, d[key]]))).append(\"title\").text(d => d.name);\n\n  // Append the axis for each key.\n  svg.append(\"g\").selectAll(\"g\").data(keys).join(\"g\").attr(\"transform\", d => `translate(0,${y(d)})`).each(function (d) {\n    d3.select(this).call(d3.axisBottom(x.get(d)));\n  }).call(g => g.append(\"text\").attr(\"x\", marginLeft).attr(\"y\", -6).attr(\"text-anchor\", \"start\").attr(\"fill\", \"currentColor\").text(d => d)).call(g => g.selectAll(\"text\").clone(true).lower().attr(\"fill\", \"none\").attr(\"stroke-width\", 5).attr(\"stroke-linejoin\", \"round\").attr(\"stroke\", \"white\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"parralel-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: /*#__PURE__*/_jsxDEV(NewSlider, {\n        props: {\n          dateRange: dateRange,\n          setDateRange: setDateRange\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s2(GraphVisualization, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = GraphVisualization;\nexport default ParallelPlot;\nvar _c, _c2;\n$RefreshReg$(_c, \"ParallelPlot\");\n$RefreshReg$(_c2, \"GraphVisualization\");","map":{"version":3,"names":["useEffect","useState","d3","jsxDEV","_jsxDEV","ParallelPlot","_s","data","setData","dsv","d","week","slice","count","then","loadedData","children","fileName","_jsxFileName","lineNumber","columnNumber","GraphVisualization","_c","_s2","keys","columns","width","height","length","marginTop","marginRight","marginBottom","marginLeft","select","remove","x","Map","Array","from","key","scaleLinear","extent","y","scalePoint","color","scaleSequential","get","keyz","domain","t","interpolateBrBG","svg","append","attr","line","defined","value","selectAll","sort","a","b","ascending","join","cross","text","name","each","call","axisBottom","g","clone","lower","id","className","NewSlider","props","dateRange","setDateRange","_c2","$RefreshReg$"],"sources":["C:/Jean/Scolarite/NUS/SoC/Data_vizualisation/Assignement_2/assignement2-app/src/Components/ParallelPlot.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nfunction ParallelPlot() {\r\n    const [data, setData] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      d3.dsv(\",\", \"/assets/cars.csv\", (d) => ({\r\n        week: d.week.slice(0, 10),\r\n        count: +d.count,\r\n      })).then((loadedData) => {\r\n        setData(loadedData);\r\n      });\r\n    }, []);\r\n  \r\n    if (!data) return <p>Loading viz...</p>;\r\n  \r\n    return <GraphVisualization data={data} />;\r\n  }\r\n\r\n\r\nfunction GraphVisualization({ data}){\r\n\r\n    // Specify the chart’s dimensions.\r\n    const keys = data.columns.slice(1)\r\n    const width = 928;\r\n    const height = keys.length * 120;\r\n    const marginTop = 20;\r\n    const marginRight = 10;\r\n    const marginBottom = 20;\r\n    const marginLeft = 10;\r\n    useEffect(() => {\r\n      d3.select(\"#parralel-container\").select(\"svg\").remove(); \r\n    }, [data]);\r\n  \r\n    // Create an horizontal (*x*) scale for each key.\r\n    const x = new Map(Array.from(keys, key => [key, d3.scaleLinear(d3.extent(data, d => d[key]), [marginLeft, width - marginRight])]));\r\n  \r\n    // Create the vertical (*y*) scale.\r\n    const y = d3.scalePoint(keys, [marginTop, height - marginBottom]);\r\n  \r\n    // Create the color scale.\r\n    const color = d3.scaleSequential(x.get(keyz).domain(), t => d3.interpolateBrBG(1 - t));\r\n  \r\n    // Create the SVG container.\r\n    //const svg = d3.create(\"svg\")\r\n    const svg = d3.select(\"#parralel-container\")\r\n        .append(\"svg\")\r\n        .attr(\"viewBox\", [0, 0, width, height])\r\n        .attr(\"width\", width)\r\n        .attr(\"height\", height)\r\n        .attr(\"style\", \"max-width: 100%; height: auto;\");\r\n  \r\n    // Append the lines.\r\n    const line = d3.line()\r\n      .defined(([, value]) => value != null)\r\n      .x(([key, value]) => x.get(key)(value))\r\n      .y(([key]) => y(key));\r\n  \r\n    svg.append(\"g\")\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke-width\", 1.5)\r\n        .attr(\"stroke-opacity\", 0.4)\r\n      .selectAll(\"path\")\r\n      .data(data.slice().sort((a, b) => d3.ascending(a[keyz], b[keyz])))\r\n      .join(\"path\")\r\n        .attr(\"stroke\", d => color(d[keyz]))\r\n        .attr(\"d\", d => line(d3.cross(keys, [d], (key, d) => [key, d[key]])))\r\n      .append(\"title\")\r\n        .text(d => d.name);\r\n  \r\n    // Append the axis for each key.\r\n    svg.append(\"g\")\r\n      .selectAll(\"g\")\r\n      .data(keys)\r\n      .join(\"g\")\r\n        .attr(\"transform\", d => `translate(0,${y(d)})`)\r\n        .each(function(d) { d3.select(this).call(d3.axisBottom(x.get(d))); })\r\n        .call(g => g.append(\"text\")\r\n          .attr(\"x\", marginLeft)\r\n          .attr(\"y\", -6)\r\n          .attr(\"text-anchor\", \"start\")\r\n          .attr(\"fill\", \"currentColor\")\r\n          .text(d => d))\r\n        .call(g => g.selectAll(\"text\")\r\n          .clone(true).lower()\r\n          .attr(\"fill\", \"none\")\r\n          .attr(\"stroke-width\", 5)\r\n          .attr(\"stroke-linejoin\", \"round\")\r\n          .attr(\"stroke\", \"white\"));\r\n    \r\n    return (\r\n    <div id=\"parralel-container\">\r\n    <div className=\"slider-container\">\r\n        <NewSlider props={{dateRange:dateRange, setDateRange: setDateRange}}/>\r\n        {/*<DateSlider2 minDate={0} maxDate={2023-2010+1} dateRange={dateRange} setDateRange={setDateRange} className=\"date-slider2\" label=\"Date Range2\"/>*/}\r\n    </div>\r\n    </div>);\r\n  }\r\n\r\n  export default ParallelPlot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}